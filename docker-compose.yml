version: '3.3'
services:
####################################################################
# Xwiki
###################################################################             
  xwiki:
    # Use an already built XWiki image from DockerHub.
    image: "xwiki:stable-mysql-tomcat"
    container_name: xwiki-mysql-tomcat-web
    depends_on:
      - mysql
    # The DB_USER/DB_PASSWORD/DB_HOST variables are used in the hibernate.cfg.xml file.
    environment:
      - DB_USER=xwiki
      - DB_PASSWORD=xwiki
      - DB_DATABASE=xwiki
      - DB_HOST=mysql
    # Provide a name instead of an auto-generated id for the xwiki permanent directory configured in the Dockerfile,
    # to make it simpler to identify in 'docker volume ls'.
    volumes:
      - /opt/open4goods/xwiki:/usr/local/xwiki
    networks:
      - o4g-network
    ports:
      - "8080:8080"

####################################################################
# Mysql
###################################################################  
  # The container that runs MySQL
  mysql:
    image: "mysql:5.7"
    container_name: mysql
    restart: always
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

    # - We provide a xwiki.cnf file in order to configure the mysql db to support UTF8 and be case-insensitive
    # We have to do it here since we use an existing image and that's how this image allows customizations.
    # See https://hub.docker.com/_/mysql/ for more details.
    # - Provide a name instead of an auto-generated id for the mysql data, to make it simpler to identify in
    # 'docker volume ls'
    volumes:
#      - ./xwiki.cnf:/etc/mysql/conf.d/xwiki.cnf
      - /opt/open4goods/mysql-data:/var/lib/mysql
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # Configure the MySQL database and create a user with provided name/password.
    # See https://hub.docker.com/_/mysql/ for more details.
    environment:
      - MYSQL_ROOT_PASSWORD=xwiki
      - MYSQL_USER=xwiki
      - MYSQL_PASSWORD=xwiki
      - MYSQL_DATABASE=xwiki
                 
    networks:
      - o4g-network
    ports:
      - "3306"


####################################################################
# Elastic Search
###################################################################
       
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elastic
    environment:
      - http.max_content_length=200mb
      - node.name=elastic
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elastic
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      
    ulimits:
      memlock:
        soft: -1
        hard: -1    
      nproc: 65536
      nofile:
        soft: 65536
        hard: 65536

#    volumes:
#      - /tmp/elastic-data:/usr/share/elasticsearch/data

    ports:
      - "9200:9200"
    networks:
      - o4g-network



####################################################################
# Redis
###################################################################
       
  redis:
    image: bitnami/redis:latest
    container_name: redis
    command: ["redis-server", "--stop-writes-on-bgsave-error","no",--protected-mode","no", "--appendonly", "no", "--maxmemory", "20mb", "--maxmemory-policy", "allkeys-lru"]
    ports:
      - 6379:6379        
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
 
    networks:
      - o4g-network
      
      

####################################################################
# Kibana
###################################################################

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    depends_on: 
      - elastic
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: http://elastic:9200

    networks:
      - o4g-network

    
volumes:
  elastic-data:
    driver: local

networks:
  o4g-network:
    driver: bridge
