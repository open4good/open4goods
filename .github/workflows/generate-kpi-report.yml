name: Weekly KPI Report

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: "Start date (YYYY-MM-DD)"
        required: false
      end_date:
        description: "End date (YYYY-MM-DD)"
        required: false
      create_PR:
        description: "Create Pull Request (true/false)"
        required: false
        default: "false"

jobs:
  all-in-one:
    runs-on: ubuntu-latest
    env:
      PLAUSIBLE_API_KEY: ${{ secrets.PLAUSIBLE_API_KEY }}
      XWIKI_API_TOKEN:  ${{ secrets.XWIKI_API_TOKEN }}
      CUSTOM_API_TOKEN: ${{ secrets.CUSTOM_API_TOKEN }}
      GITHUB_TOKEN:     ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Run entire KPI pipeline
        run: |
          # 1. Clone the repo (remplace actions/checkout)
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git .
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          # 2. Déterminer les dates
          if [ -z "${{ github.event.inputs.start_date }}" ]; then
            START_DATE=$(date -d '7 days ago' +%F)
          else
            START_DATE="${{ github.event.inputs.start_date }}"
          fi
          if [ -z "${{ github.event.inputs.end_date }}" ]; then
            END_DATE=$(date +%F)
          else
            END_DATE="${{ github.event.inputs.end_date }}"
          fi

          # 3. Installer les dépendances Python et fetch des KPI
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --no-cache-dir requests pandas jinja2 matplotlib
          mkdir -p docs/json
          python scripts/fetch_kpi.py "$START_DATE" "$END_DATE" docs/json/weekly_"$END_DATE".json

          # 4. Générer MD & CSV
          JSON_FILE=docs/json/weekly_"$END_DATE".json
          python scripts/generate_markdown.py \
            "$JSON_FILE" \
            docs/templates/weekly_report_template.md \
            docs/weekly_"$END_DATE".md \
            docs/_kpi_tracking.csv

          # 5. Si demandé, créer branche, commit, PR & Issue
          if [ "${{ github.event.inputs.create_PR }}" = "true" ]; then
            BRANCH=weekly-report-"$END_DATE"
            git checkout -b "$BRANCH"
            git add "$JSON_FILE" docs/weekly_"$END_DATE".md docs/_kpi_tracking.csv
            git commit -m "Weekly KPI report ($END_DATE)"
            git push -u origin "$BRANCH"

            # Installation et configuration de gh si nécessaire
            if ! command -v gh >/dev/null; then
              sudo apt-get update && sudo apt-get install -y gh
            fi

            ISSUE_BODY="- [ ] Vérification des KPI
                        - [ ] Discussion des alertes
                        - [ ] Actions à prévoir"
            ISSUE_URL=$(gh issue create --title "Weekly KPI Follow-up - $END_DATE" --body "$ISSUE_BODY")
            gh pr create \
              --title "Weekly KPI report - $END_DATE" \
              --body "Automated weekly KPI report.\n\nLinked Issue: $ISSUE_URL"
          fi
