name: Weekly KPI Report

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: "Start date (YYYY-MM-DD)"
        required: false
      end_date:
        description: "End date (YYYY-MM-DD)"
        required: false
      create_PR:
        description: "Create Pull Request (true/false)"
        required: false
        default: "false"

jobs:
  fetch_kpi:
    runs-on: ubuntu-latest
    outputs:
      json_file: ${{ steps.fetch.outputs.json_file }}
      start_date: ${{ steps.dates.outputs.START_DATE }}
      end_date: ${{ steps.dates.outputs.END_DATE }}
    steps:
      - uses: actions/checkout@v4

      - name: Set default dates
        id: dates
        run: |
          if [ -z "${{ github.event.inputs.start_date }}" ]; then
            START_DATE=$(date -d '7 days ago' +%F)
          else
            START_DATE="${{ github.event.inputs.start_date }}"
          fi
          if [ -z "${{ github.event.inputs.end_date }}" ]; then
            END_DATE=$(date +%F)
          else
            END_DATE="${{ github.event.inputs.end_date }}"
          fi
          echo "START_DATE=$START_DATE" >> $GITHUB_ENV
          echo "END_DATE=$END_DATE" >> $GITHUB_ENV

      - name: Fetch KPI data
        id: fetch
        env:
          PLAUSIBLE_API_KEY: ${{ secrets.PLAUSIBLE_API_KEY }}
          XWIKI_API_TOKEN: ${{ secrets.XWIKI_API_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_API_TOKEN: ${{ secrets.CUSTOM_API_TOKEN }}
        run: |
          pip install requests
          python scripts/fetch_kpi.py $START_DATE $END_DATE docs/json/weekly_${END_DATE}.json
          echo "json_file=docs/json/weekly_${END_DATE}.json" >> $GITHUB_OUTPUT

      - name: Upload KPI JSON
        uses: actions/upload-artifact@v4
        with:
          name: kpi-json
          path: ${{ steps.fetch.outputs.json_file }}
          
      - name: Commit JSON file
        if: ${{ github.event.inputs.create_PR == 'true' }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b weekly-report-${END_DATE}
          git add ${{ steps.fetch.outputs.json_file }}
          git commit -m "KPI JSON report ($END_DATE)"
          git push -u origin weekly-report-${END_DATE}

  generate_report:
    needs: fetch_kpi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

    
      - name: Download KPI JSON
        uses: actions/download-artifact@v4
        with:
          name: kpi-json
                      
      
      - name: Generate Markdown and CSV
        run: |
          pip install pandas jinja2 matplotlib
          python scripts/generate_markdown.py \
            ${{ needs.fetch_kpi.outputs.json_file }} \
            docs/templates/weekly_report_template.md \
            docs/weekly_${{ needs.fetch_kpi.outputs.end_date }}.md \
            docs/_kpi_tracking.csv

            
            
      - name: Commit Markdown and CSV
        if: ${{ github.event.inputs.create_PR == 'true' }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add docs/
          git commit -m "Weekly KPI Markdown and CSV update"
          git push origin weekly-report-${{ needs.fetch_kpi.outputs.end_date }}

  create_issue_pr:
    needs: [generate_report, fetch_kpi]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: weekly-report-${{ needs.fetch_kpi.outputs.end_date }}

      - name: Create Issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_URL=$(gh issue create \
            --title "Weekly KPI Follow-up - ${{ needs.fetch_kpi.outputs.end_date }}" \
            --body "- [ ] Vérification des KPI\n- [ ] Discussion des alertes\n- [ ] Actions à prévoir\n")
          echo "ISSUE_URL=$ISSUE_URL" >> $GITHUB_ENV

      - name: Create PR
        if: ${{ github.event.inputs.create_PR == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Weekly KPI report - ${{ needs.fetch_kpi.outputs.end_date }}" \
            --body "Automated weekly KPI report.\n\nLinked Issue: ${{ env.ISSUE_URL }}"
