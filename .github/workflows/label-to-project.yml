# .github/workflows/assign-issues-to-projects.yml
name: Assign Issues to GitHub Projects V2

on:
  issues:
    types: [labeled]

env:
  # Your org and a map of labels → ProjectV2 numbers.
  ORG_NAME: open4good
  PROJECT_NUMBER_MAPPING: |
    squad:ux=PVT_kwDOBOJOp84A2ZRZ
    # squad:backend=5
    # squad:frontend=6

jobs:
  assign-to-project:
    if: github.event.action == 'labeled'
    runs-on: ubuntu-latest
    steps:
      - name: Add issue to project based on label
        uses: actions/github-script@v6
        with:
          github-token: ${{ GITHUB_TOKEN }}
          script: |
            const org = process.env.ORG_NAME;
            // parse label→projectNumber map
            const mapping = Object.fromEntries(
              process.env.PROJECT_NUMBER_MAPPING
                .trim()
                .split('\n')
                .map(line => line.trim().split('='))
                .map(([label, num]) => [label, Number(num)])
            );

            const labelName = context.payload.label.name;
            const projectNumber = mapping[labelName];
            if (!projectNumber) {
              console.log(`No project configured for label '${labelName}', skipping.`);
              return;
            }

            // 1) Fetch the ProjectV2 node ID for this project number
            const projectQuery = await github.graphql(
              `
              query($org: String!, $projectNumber: Int!) {
                organization(login: $org) {
                  projectV2(number: $projectNumber) {
                    id
                  }
                }
              }
              `,
              { org, projectNumber }
            );
            const projectId = projectQuery.organization.projectV2.id;

            // 2) Add the issue to the project
            await github.graphql(
              `
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemById(input: { projectId: $projectId, contentId: $contentId }) {
                  item {
                    id
                  }
                }
              }
              `,
              {
                projectId,
                contentId: context.payload.issue.node_id
              }
            );

            console.log(`Issue #${context.payload.issue.number} added to project #${projectNumber}.`);
