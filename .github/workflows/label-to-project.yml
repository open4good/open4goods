name: Add issue to Beta project when labeled

on:
  issues:
    types: [labeled]

jobs:
  add_to_beta_project:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve Project V2 ID
        id: get_project
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const label = context.payload.label.name;
            if (label !== 'squad:ux') return null;
            const org = 'open4good';
            const projNum = 1; // adapter
            const query = `
              query($org: String!, $num: Int!) {
                organization(login: $org) {
                  projectV2(number: $num) { id }
                }
              }`;
            const res = await github.graphql(query, { org, num: projNum });
            return res.organization.projectV2?.id;

      - name: Add issue to Project (Beta)
        if: steps.get_project.outputs.result
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projId = '${{ steps.get_project.outputs.result }}';
            const issueId = context.payload.issue.node_id;
            await github.graphql(`
              mutation ($projId: ID!, $contentId: ID!) {
                addProjectNextItem(input: { projectId: $projId, contentId: $contentId }) {
                  projectNextItem { id }
                }
              }`, { projId, contentId: issueId });
            console.log(`✅ Issue #${context.payload.issue.number} ajoutée à Project Beta ${projId}`);
