package org.open4goods.nudgerfrontapi.dto.product;

import java.util.List;

import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * DTO exposing the textual content generated by the AI review pipeline.
 */
public record AiReviewDto(
        @Schema(description = "Detailed description of the product generated by AI", example = "A versatile 6.1'' smartphone with an OLED display and dual camera setup.")
        String description,

        @Schema(description = "Short teaser presenting the product", example = "Compact OLED smartphone built for everyday use.")
        String shortDescription,

        @Schema(description = "Medium length title summarising the review", example = "A balanced smartphone for demanding users")
        String mediumTitle,

        @Schema(description = "Short title highlighting the product", example = "Versatile OLED smartphone")
        String shortTitle,

        @Schema(description = "Technical analysis extracted from trustworthy sources")
        String technicalReview,

        @Schema(description = "Ecological assessment derived from the available documentation")
        String ecologicalReview,

        @Schema(description = "Concise summary mixing technical and ecological highlights")
        String summary,

        @ArraySchema(arraySchema = @Schema(description = "List of pros emphasised by the AI review"), schema = @Schema(example = "Long lasting battery"))
        List<String> pros,

        @ArraySchema(arraySchema = @Schema(description = "List of cons emphasised by the AI review"), schema = @Schema(example = "No wireless charging"))
        List<String> cons,

        @ArraySchema(schema = @Schema(implementation = AiReviewSourceDto.class),
                arraySchema = @Schema(description = "Sources cited to support the AI review"))
        List<AiReviewSourceDto> sources,

        @ArraySchema(schema = @Schema(implementation = AiReviewAttributeDto.class),
                arraySchema = @Schema(description = "Attributes extracted from the sources and referenced inside the review"))
        List<AiReviewAttributeDto> attributes,

        @Schema(description = "Assessment of the data quality available for the product", example = "High quality data with multiple independent tests")
        String dataQuality
) {
}
