/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TeamProperties,
} from '../models/index';
import {
    TeamPropertiesFromJSON,
    TeamPropertiesToJSON,
} from '../models/index';

export interface TeamRequest {
    domainLanguage: TeamDomainLanguageEnum;
}

/**
 * 
 */
export class TeamApi extends runtime.BaseAPI {

    /**
     * Return the configured list of core team members and contributors.
     * Get eco-nudger team roster
     */
    async teamRaw(requestParameters: TeamRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TeamProperties>> {
        if (requestParameters['domainLanguage'] == null) {
            throw new runtime.RequiredError(
                'domainLanguage',
                'Required parameter "domainLanguage" was null or undefined when calling team().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['domainLanguage'] != null) {
            queryParameters['domainLanguage'] = requestParameters['domainLanguage'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/team`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TeamPropertiesFromJSON(jsonValue));
    }

    /**
     * Return the configured list of core team members and contributors.
     * Get eco-nudger team roster
     */
    async team(requestParameters: TeamRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TeamProperties> {
        const response = await this.teamRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const TeamDomainLanguageEnum = {
    Fr: 'fr',
    En: 'en'
} as const;
export type TeamDomainLanguageEnum = typeof TeamDomainLanguageEnum[keyof typeof TeamDomainLanguageEnum];
