/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecommandationCriteria } from './RecommandationCriteria';
import {
    RecommandationCriteriaFromJSON,
    RecommandationCriteriaFromJSONTyped,
    RecommandationCriteriaToJSON,
    RecommandationCriteriaToJSONTyped,
} from './RecommandationCriteria';

/**
 * 
 * @export
 * @interface RecommandationsConfig
 */
export interface RecommandationsConfig {
    /**
     * 
     * @type {Array<RecommandationCriteria>}
     * @memberof RecommandationsConfig
     */
    recommandations: Array<RecommandationCriteria>;
}

/**
 * Check if a given object implements the RecommandationsConfig interface.
 */
export function instanceOfRecommandationsConfig(value: object): value is RecommandationsConfig {
    if (!('recommandations' in value) || value['recommandations'] === undefined) return false;
    return true;
}

export function RecommandationsConfigFromJSON(json: any): RecommandationsConfig {
    return RecommandationsConfigFromJSONTyped(json, false);
}

export function RecommandationsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecommandationsConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'recommandations': ((json['recommandations'] as Array<any>).map(RecommandationCriteriaFromJSON)),
    };
}

export function RecommandationsConfigToJSON(json: any): RecommandationsConfig {
    return RecommandationsConfigToJSONTyped(json, false);
}

export function RecommandationsConfigToJSONTyped(value?: RecommandationsConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'recommandations': ((value['recommandations'] as Array<any>).map(RecommandationCriteriaToJSON)),
    };
}

