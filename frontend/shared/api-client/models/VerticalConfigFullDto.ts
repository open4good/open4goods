/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductI18nElements } from './ProductI18nElements';
import {
    ProductI18nElementsFromJSON,
    ProductI18nElementsFromJSONTyped,
    ProductI18nElementsToJSON,
    ProductI18nElementsToJSONTyped,
} from './ProductI18nElements';
import type { RecommandationsConfig } from './RecommandationsConfig';
import {
    RecommandationsConfigFromJSON,
    RecommandationsConfigFromJSONTyped,
    RecommandationsConfigToJSON,
    RecommandationsConfigToJSONTyped,
} from './RecommandationsConfig';
import type { BarcodeAggregationProperties } from './BarcodeAggregationProperties';
import {
    BarcodeAggregationPropertiesFromJSON,
    BarcodeAggregationPropertiesFromJSONTyped,
    BarcodeAggregationPropertiesToJSON,
    BarcodeAggregationPropertiesToJSONTyped,
} from './BarcodeAggregationProperties';
import type { FeatureGroup } from './FeatureGroup';
import {
    FeatureGroupFromJSON,
    FeatureGroupFromJSONTyped,
    FeatureGroupToJSON,
    FeatureGroupToJSONTyped,
} from './FeatureGroup';
import type { VerticalSubset } from './VerticalSubset';
import {
    VerticalSubsetFromJSON,
    VerticalSubsetFromJSONTyped,
    VerticalSubsetToJSON,
    VerticalSubsetToJSONTyped,
} from './VerticalSubset';
import type { VerticalConfigI18nDto } from './VerticalConfigI18nDto';
import {
    VerticalConfigI18nDtoFromJSON,
    VerticalConfigI18nDtoFromJSONTyped,
    VerticalConfigI18nDtoToJSON,
    VerticalConfigI18nDtoToJSONTyped,
} from './VerticalConfigI18nDto';
import type { AttributesConfig } from './AttributesConfig';
import {
    AttributesConfigFromJSON,
    AttributesConfigFromJSONTyped,
    AttributesConfigToJSON,
    AttributesConfigToJSONTyped,
} from './AttributesConfig';
import type { ImpactScoreCriteria } from './ImpactScoreCriteria';
import {
    ImpactScoreCriteriaFromJSON,
    ImpactScoreCriteriaFromJSONTyped,
    ImpactScoreCriteriaToJSON,
    ImpactScoreCriteriaToJSONTyped,
} from './ImpactScoreCriteria';
import type { SiteNaming } from './SiteNaming';
import {
    SiteNamingFromJSON,
    SiteNamingFromJSONTyped,
    SiteNamingToJSON,
    SiteNamingToJSONTyped,
} from './SiteNaming';
import type { ResourcesAggregationConfig } from './ResourcesAggregationConfig';
import {
    ResourcesAggregationConfigFromJSON,
    ResourcesAggregationConfigFromJSONTyped,
    ResourcesAggregationConfigToJSON,
    ResourcesAggregationConfigToJSONTyped,
} from './ResourcesAggregationConfig';
import type { DescriptionsAggregationConfig } from './DescriptionsAggregationConfig';
import {
    DescriptionsAggregationConfigFromJSON,
    DescriptionsAggregationConfigFromJSONTyped,
    DescriptionsAggregationConfigToJSON,
    DescriptionsAggregationConfigToJSONTyped,
} from './DescriptionsAggregationConfig';
import type { ImpactScoreConfig } from './ImpactScoreConfig';
import {
    ImpactScoreConfigFromJSON,
    ImpactScoreConfigFromJSONTyped,
    ImpactScoreConfigToJSON,
    ImpactScoreConfigToJSONTyped,
} from './ImpactScoreConfig';
import type { ScoringAggregationConfig } from './ScoringAggregationConfig';
import {
    ScoringAggregationConfigFromJSON,
    ScoringAggregationConfigFromJSONTyped,
    ScoringAggregationConfigToJSON,
    ScoringAggregationConfigToJSONTyped,
} from './ScoringAggregationConfig';

/**
 * 
 * @export
 * @interface VerticalConfigFullDto
 */
export interface VerticalConfigFullDto {
    /**
     * Unique identifier of the vertical configuration.
     * @type {string}
     * @memberof VerticalConfigFullDto
     */
    id?: string;
    /**
     * Indicates whether the vertical is exposed to end-users.
     * @type {boolean}
     * @memberof VerticalConfigFullDto
     */
    enabled?: boolean;
    /**
     * Google taxonomy identifier associated with this vertical.
     * @type {number}
     * @memberof VerticalConfigFullDto
     */
    googleTaxonomyId?: number;
    /**
     * Icecat taxonomy identifier associated with this vertical.
     * @type {number}
     * @memberof VerticalConfigFullDto
     */
    icecatTaxonomyId?: number;
    /**
     * Display order used to render the category list.
     * @type {number}
     * @memberof VerticalConfigFullDto
     */
    order?: number;
    /**
     * Thumbnail image representing the vertical. TODO(front-api): populate when media assets are defined.
     * @type {string}
     * @memberof VerticalConfigFullDto
     */
    imageThumbnail?: string;
    /**
     * Primary image for the vertical hero section. TODO(front-api): populate when media assets are defined.
     * @type {string}
     * @memberof VerticalConfigFullDto
     */
    image?: string;
    /**
     * Localised singular label for the vertical. TODO(front-api): populate when naming strategy is available.
     * @type {string}
     * @memberof VerticalConfigFullDto
     */
    singularName?: string;
    /**
     * Localised plural label for the vertical. TODO(front-api): populate when naming strategy is available.
     * @type {string}
     * @memberof VerticalConfigFullDto
     */
    pluralName?: string;
    /**
     * Localised summary texts keyed by IETF BCP 47 language tag.
     * @type {{ [key: string]: VerticalConfigI18nDto; }}
     * @memberof VerticalConfigFullDto
     */
    i18n?: { [key: string]: VerticalConfigI18nDto; };
    /**
     * Full set of i18n elements as defined in the YAML configuration.
     * @type {{ [key: string]: ProductI18nElements; }}
     * @memberof VerticalConfigFullDto
     */
    rawI18n?: { [key: string]: ProductI18nElements; };
    /**
     * Eco filters enabled for this vertical.
     * @type {Array<string>}
     * @memberof VerticalConfigFullDto
     */
    ecoFilters?: Array<string>;
    /**
     * Technical filters enabled for this vertical.
     * @type {Array<string>}
     * @memberof VerticalConfigFullDto
     */
    technicalFilters?: Array<string>;
    /**
     * Global technical filters applied across datasources.
     * @type {Array<string>}
     * @memberof VerticalConfigFullDto
     */
    globalTechnicalFilters?: Array<string>;
    /**
     * Mapping of datasource categories to this vertical.
     * @type {{ [key: string]: Set<string>; }}
     * @memberof VerticalConfigFullDto
     */
    matchingCategories?: { [key: string]: Set<string>; };
    /**
     * Tokens that exclude a product from matching this vertical.
     * @type {Set<string>}
     * @memberof VerticalConfigFullDto
     */
    excludingTokensFromCategoriesMatching?: Set<string>;
    /**
     * Datasources ignored when computing category matches.
     * @type {Set<string>}
     * @memberof VerticalConfigFullDto
     */
    generationExcludedFromCategoriesMatching?: Set<string>;
    /**
     * Attributes ignored when computing attribute suggestions.
     * @type {Set<string>}
     * @memberof VerticalConfigFullDto
     */
    generationExcludedFromAttributesMatching?: Set<string>;
    /**
     * Attributes required for the product to belong to this vertical.
     * @type {Set<string>}
     * @memberof VerticalConfigFullDto
     */
    requiredAttributes?: Set<string>;
    /**
     * Regenerate URL friendly names even if already generated.
     * @type {boolean}
     * @memberof VerticalConfigFullDto
     */
    forceNameGeneration?: boolean;
    /**
     * Mappings of brand aliases to canonical brand names.
     * @type {{ [key: string]: string; }}
     * @memberof VerticalConfigFullDto
     */
    brandsAlias?: { [key: string]: string; };
    /**
     * Brands excluded from this vertical.
     * @type {Set<string>}
     * @memberof VerticalConfigFullDto
     */
    brandsExclusion?: Set<string>;
    /**
     * Site naming configuration inherited by the UI.
     * @type {SiteNaming}
     * @memberof VerticalConfigFullDto
     */
    namings?: SiteNaming;
    /**
     * Configuration for media aggregation.
     * @type {ResourcesAggregationConfig}
     * @memberof VerticalConfigFullDto
     */
    resourcesConfig?: ResourcesAggregationConfig;
    /**
     * Configuration for attribute aggregation and filters.
     * @type {AttributesConfig}
     * @memberof VerticalConfigFullDto
     */
    attributesConfig?: AttributesConfig;
    /**
     * Impact score criteria available for this vertical.
     * @type {{ [key: string]: ImpactScoreCriteria; }}
     * @memberof VerticalConfigFullDto
     */
    availableImpactScoreCriterias?: { [key: string]: ImpactScoreCriteria; };
    /**
     * Impact score configuration balancing each criterion.
     * @type {ImpactScoreConfig}
     * @memberof VerticalConfigFullDto
     */
    impactScoreConfig?: ImpactScoreConfig;
    /**
     * Custom subsets defined for this vertical.
     * @type {Array<VerticalSubset>}
     * @memberof VerticalConfigFullDto
     */
    subsets?: Array<VerticalSubset>;
    /**
     * Subset dedicated to brand exploration.
     * @type {VerticalSubset}
     * @memberof VerticalConfigFullDto
     */
    brandsSubset?: VerticalSubset;
    /**
     * Barcode aggregation configuration.
     * @type {BarcodeAggregationProperties}
     * @memberof VerticalConfigFullDto
     */
    barcodeConfig?: BarcodeAggregationProperties;
    /**
     * Recommendation engine configuration.
     * @type {RecommandationsConfig}
     * @memberof VerticalConfigFullDto
     */
    recommandationsConfig?: RecommandationsConfig;
    /**
     * Description aggregation configuration.
     * @type {DescriptionsAggregationConfig}
     * @memberof VerticalConfigFullDto
     */
    descriptionsAggregationConfig?: DescriptionsAggregationConfig;
    /**
     * Scoring aggregation configuration.
     * @type {ScoringAggregationConfig}
     * @memberof VerticalConfigFullDto
     */
    scoringAggregationConfig?: ScoringAggregationConfig;
    /**
     * Feature groups ordering attributes for UI rendering.
     * @type {Array<FeatureGroup>}
     * @memberof VerticalConfigFullDto
     */
    featureGroups?: Array<FeatureGroup>;
    /**
     * Threshold defining how many low scores are considered worsts.
     * @type {number}
     * @memberof VerticalConfigFullDto
     */
    worseLimit?: number;
    /**
     * Threshold defining how many high scores are considered bests.
     * @type {number}
     * @memberof VerticalConfigFullDto
     */
    bettersLimit?: number;
}

/**
 * Check if a given object implements the VerticalConfigFullDto interface.
 */
export function instanceOfVerticalConfigFullDto(value: object): value is VerticalConfigFullDto {
    return true;
}

export function VerticalConfigFullDtoFromJSON(json: any): VerticalConfigFullDto {
    return VerticalConfigFullDtoFromJSONTyped(json, false);
}

export function VerticalConfigFullDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerticalConfigFullDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'googleTaxonomyId': json['googleTaxonomyId'] == null ? undefined : json['googleTaxonomyId'],
        'icecatTaxonomyId': json['icecatTaxonomyId'] == null ? undefined : json['icecatTaxonomyId'],
        'order': json['order'] == null ? undefined : json['order'],
        'imageThumbnail': json['imageThumbnail'] == null ? undefined : json['imageThumbnail'],
        'image': json['image'] == null ? undefined : json['image'],
        'singularName': json['singularName'] == null ? undefined : json['singularName'],
        'pluralName': json['pluralName'] == null ? undefined : json['pluralName'],
        'i18n': json['i18n'] == null ? undefined : (mapValues(json['i18n'], VerticalConfigI18nDtoFromJSON)),
        'rawI18n': json['rawI18n'] == null ? undefined : (mapValues(json['rawI18n'], ProductI18nElementsFromJSON)),
        'ecoFilters': json['ecoFilters'] == null ? undefined : json['ecoFilters'],
        'technicalFilters': json['technicalFilters'] == null ? undefined : json['technicalFilters'],
        'globalTechnicalFilters': json['globalTechnicalFilters'] == null ? undefined : json['globalTechnicalFilters'],
        'matchingCategories': json['matchingCategories'] == null ? undefined : json['matchingCategories'],
        'excludingTokensFromCategoriesMatching': json['excludingTokensFromCategoriesMatching'] == null ? undefined : new Set(json['excludingTokensFromCategoriesMatching']),
        'generationExcludedFromCategoriesMatching': json['generationExcludedFromCategoriesMatching'] == null ? undefined : new Set(json['generationExcludedFromCategoriesMatching']),
        'generationExcludedFromAttributesMatching': json['generationExcludedFromAttributesMatching'] == null ? undefined : new Set(json['generationExcludedFromAttributesMatching']),
        'requiredAttributes': json['requiredAttributes'] == null ? undefined : new Set(json['requiredAttributes']),
        'forceNameGeneration': json['forceNameGeneration'] == null ? undefined : json['forceNameGeneration'],
        'brandsAlias': json['brandsAlias'] == null ? undefined : json['brandsAlias'],
        'brandsExclusion': json['brandsExclusion'] == null ? undefined : new Set(json['brandsExclusion']),
        'namings': json['namings'] == null ? undefined : SiteNamingFromJSON(json['namings']),
        'resourcesConfig': json['resourcesConfig'] == null ? undefined : ResourcesAggregationConfigFromJSON(json['resourcesConfig']),
        'attributesConfig': json['attributesConfig'] == null ? undefined : AttributesConfigFromJSON(json['attributesConfig']),
        'availableImpactScoreCriterias': json['availableImpactScoreCriterias'] == null ? undefined : (mapValues(json['availableImpactScoreCriterias'], ImpactScoreCriteriaFromJSON)),
        'impactScoreConfig': json['impactScoreConfig'] == null ? undefined : ImpactScoreConfigFromJSON(json['impactScoreConfig']),
        'subsets': json['subsets'] == null ? undefined : ((json['subsets'] as Array<any>).map(VerticalSubsetFromJSON)),
        'brandsSubset': json['brandsSubset'] == null ? undefined : VerticalSubsetFromJSON(json['brandsSubset']),
        'barcodeConfig': json['barcodeConfig'] == null ? undefined : BarcodeAggregationPropertiesFromJSON(json['barcodeConfig']),
        'recommandationsConfig': json['recommandationsConfig'] == null ? undefined : RecommandationsConfigFromJSON(json['recommandationsConfig']),
        'descriptionsAggregationConfig': json['descriptionsAggregationConfig'] == null ? undefined : DescriptionsAggregationConfigFromJSON(json['descriptionsAggregationConfig']),
        'scoringAggregationConfig': json['scoringAggregationConfig'] == null ? undefined : ScoringAggregationConfigFromJSON(json['scoringAggregationConfig']),
        'featureGroups': json['featureGroups'] == null ? undefined : ((json['featureGroups'] as Array<any>).map(FeatureGroupFromJSON)),
        'worseLimit': json['worseLimit'] == null ? undefined : json['worseLimit'],
        'bettersLimit': json['bettersLimit'] == null ? undefined : json['bettersLimit'],
    };
}

export function VerticalConfigFullDtoToJSON(json: any): VerticalConfigFullDto {
    return VerticalConfigFullDtoToJSONTyped(json, false);
}

export function VerticalConfigFullDtoToJSONTyped(value?: VerticalConfigFullDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'enabled': value['enabled'],
        'googleTaxonomyId': value['googleTaxonomyId'],
        'icecatTaxonomyId': value['icecatTaxonomyId'],
        'order': value['order'],
        'imageThumbnail': value['imageThumbnail'],
        'image': value['image'],
        'singularName': value['singularName'],
        'pluralName': value['pluralName'],
        'i18n': value['i18n'] == null ? undefined : (mapValues(value['i18n'], VerticalConfigI18nDtoToJSON)),
        'rawI18n': value['rawI18n'] == null ? undefined : (mapValues(value['rawI18n'], ProductI18nElementsToJSON)),
        'ecoFilters': value['ecoFilters'],
        'technicalFilters': value['technicalFilters'],
        'globalTechnicalFilters': value['globalTechnicalFilters'],
        'matchingCategories': value['matchingCategories'],
        'excludingTokensFromCategoriesMatching': value['excludingTokensFromCategoriesMatching'] == null ? undefined : Array.from(value['excludingTokensFromCategoriesMatching'] as Set<any>),
        'generationExcludedFromCategoriesMatching': value['generationExcludedFromCategoriesMatching'] == null ? undefined : Array.from(value['generationExcludedFromCategoriesMatching'] as Set<any>),
        'generationExcludedFromAttributesMatching': value['generationExcludedFromAttributesMatching'] == null ? undefined : Array.from(value['generationExcludedFromAttributesMatching'] as Set<any>),
        'requiredAttributes': value['requiredAttributes'] == null ? undefined : Array.from(value['requiredAttributes'] as Set<any>),
        'forceNameGeneration': value['forceNameGeneration'],
        'brandsAlias': value['brandsAlias'],
        'brandsExclusion': value['brandsExclusion'] == null ? undefined : Array.from(value['brandsExclusion'] as Set<any>),
        'namings': SiteNamingToJSON(value['namings']),
        'resourcesConfig': ResourcesAggregationConfigToJSON(value['resourcesConfig']),
        'attributesConfig': AttributesConfigToJSON(value['attributesConfig']),
        'availableImpactScoreCriterias': value['availableImpactScoreCriterias'] == null ? undefined : (mapValues(value['availableImpactScoreCriterias'], ImpactScoreCriteriaToJSON)),
        'impactScoreConfig': ImpactScoreConfigToJSON(value['impactScoreConfig']),
        'subsets': value['subsets'] == null ? undefined : ((value['subsets'] as Array<any>).map(VerticalSubsetToJSON)),
        'brandsSubset': VerticalSubsetToJSON(value['brandsSubset']),
        'barcodeConfig': BarcodeAggregationPropertiesToJSON(value['barcodeConfig']),
        'recommandationsConfig': RecommandationsConfigToJSON(value['recommandationsConfig']),
        'descriptionsAggregationConfig': DescriptionsAggregationConfigToJSON(value['descriptionsAggregationConfig']),
        'scoringAggregationConfig': ScoringAggregationConfigToJSON(value['scoringAggregationConfig']),
        'featureGroups': value['featureGroups'] == null ? undefined : ((value['featureGroups'] as Array<any>).map(FeatureGroupToJSON)),
        'worseLimit': value['worseLimit'],
        'bettersLimit': value['bettersLimit'],
    };
}

