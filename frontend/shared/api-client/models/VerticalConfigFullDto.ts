/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { FeatureGroupDto } from './FeatureGroupDto'
import {
  FeatureGroupDtoFromJSON,
  FeatureGroupDtoFromJSONTyped,
  FeatureGroupDtoToJSON,
  FeatureGroupDtoToJSONTyped,
} from './FeatureGroupDto'
import type { ImpactScoreConfigDto } from './ImpactScoreConfigDto'
import {
  ImpactScoreConfigDtoFromJSON,
  ImpactScoreConfigDtoFromJSONTyped,
  ImpactScoreConfigDtoToJSON,
  ImpactScoreConfigDtoToJSONTyped,
} from './ImpactScoreConfigDto'
import type { ResourcesAggregationConfig } from './ResourcesAggregationConfig'
import {
  ResourcesAggregationConfigFromJSON,
  ResourcesAggregationConfigFromJSONTyped,
  ResourcesAggregationConfigToJSON,
  ResourcesAggregationConfigToJSONTyped,
} from './ResourcesAggregationConfig'
import type { DescriptionsAggregationConfig } from './DescriptionsAggregationConfig'
import {
  DescriptionsAggregationConfigFromJSON,
  DescriptionsAggregationConfigFromJSONTyped,
  DescriptionsAggregationConfigToJSON,
  DescriptionsAggregationConfigToJSONTyped,
} from './DescriptionsAggregationConfig'
import type { RecommandationsConfig } from './RecommandationsConfig'
import {
  RecommandationsConfigFromJSON,
  RecommandationsConfigFromJSONTyped,
  RecommandationsConfigToJSON,
  RecommandationsConfigToJSONTyped,
} from './RecommandationsConfig'
import type { BarcodeAggregationProperties } from './BarcodeAggregationProperties'
import {
  BarcodeAggregationPropertiesFromJSON,
  BarcodeAggregationPropertiesFromJSONTyped,
  BarcodeAggregationPropertiesToJSON,
  BarcodeAggregationPropertiesToJSONTyped,
} from './BarcodeAggregationProperties'
import type { VerticalSubsetDto } from './VerticalSubsetDto'
import {
  VerticalSubsetDtoFromJSON,
  VerticalSubsetDtoFromJSONTyped,
  VerticalSubsetDtoToJSON,
  VerticalSubsetDtoToJSONTyped,
} from './VerticalSubsetDto'
import type { ImpactScoreCriteriaDto } from './ImpactScoreCriteriaDto'
import {
  ImpactScoreCriteriaDtoFromJSON,
  ImpactScoreCriteriaDtoFromJSONTyped,
  ImpactScoreCriteriaDtoToJSON,
  ImpactScoreCriteriaDtoToJSONTyped,
} from './ImpactScoreCriteriaDto'
import type { AiPromptsConfig } from './AiPromptsConfig'
import {
  AiPromptsConfigFromJSON,
  AiPromptsConfigFromJSONTyped,
  AiPromptsConfigToJSON,
  AiPromptsConfigToJSONTyped,
} from './AiPromptsConfig'
import type { ScoringAggregationConfig } from './ScoringAggregationConfig'
import {
  ScoringAggregationConfigFromJSON,
  ScoringAggregationConfigFromJSONTyped,
  ScoringAggregationConfigToJSON,
  ScoringAggregationConfigToJSONTyped,
} from './ScoringAggregationConfig'
import type { AttributesConfigDto } from './AttributesConfigDto'
import {
  AttributesConfigDtoFromJSON,
  AttributesConfigDtoFromJSONTyped,
  AttributesConfigDtoToJSON,
  AttributesConfigDtoToJSONTyped,
} from './AttributesConfigDto'
import type { WikiPageConfig } from './WikiPageConfig'
import {
  WikiPageConfigFromJSON,
  WikiPageConfigFromJSONTyped,
  WikiPageConfigToJSON,
  WikiPageConfigToJSONTyped,
} from './WikiPageConfig'

/**
 *
 * @export
 * @interface VerticalConfigFullDto
 */
export interface VerticalConfigFullDto {
  /**
   * Unique identifier of the vertical configuration.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  id?: string
  /**
   * Indicates whether the vertical is exposed to end-users.
   * @type {boolean}
   * @memberof VerticalConfigFullDto
   */
  enabled?: boolean
  /**
   * Google taxonomy identifier associated with this vertical.
   * @type {number}
   * @memberof VerticalConfigFullDto
   */
  googleTaxonomyId?: number
  /**
   * Icecat taxonomy identifier associated with this vertical.
   * @type {number}
   * @memberof VerticalConfigFullDto
   */
  icecatTaxonomyId?: number
  /**
   * Display order used to render the category list.
   * @type {number}
   * @memberof VerticalConfigFullDto
   */
  order?: number
  /**
   * Thumbnail image representing the vertical.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  imageSmall?: string
  /**
   * Medium image for the vertical
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  imageMedium?: string
  /**
   * Large image for the vertical
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  imageLarge?: string
  /**
   * Localised home title for the vertical.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  verticalHomeTitle?: string
  /**
   * Localised home description for the vertical.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  verticalHomeDescription?: string
  /**
   * Localised home URL slug for the vertical.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  verticalHomeUrl?: string
  /**
   * Localised meta title for the vertical landing page.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  verticalMetaTitle?: string
  /**
   * Localised meta description for the vertical landing page.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  verticalMetaDescription?: string
  /**
   * Localised Open Graph title for the vertical landing page.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  verticalMetaOpenGraphTitle?: string
  /**
   * Localised Open Graph description for the vertical landing page.
   * @type {string}
   * @memberof VerticalConfigFullDto
   */
  verticalMetaOpenGraphDescription?: string
  /**
   * Localised wiki pages associated with the vertical.
   * @type {Array<WikiPageConfig>}
   * @memberof VerticalConfigFullDto
   */
  wikiPages?: Array<WikiPageConfig>
  /**
   * Localised AI generation configuration for the vertical.
   * @type {AiPromptsConfig}
   * @memberof VerticalConfigFullDto
   */
  aiConfigs?: AiPromptsConfig
  /**
   * Eco filters enabled for this vertical.
   * @type {Array<string>}
   * @memberof VerticalConfigFullDto
   */
  ecoFilters?: Array<string>
  /**
   * Technical filters enabled for this vertical.
   * @type {Array<string>}
   * @memberof VerticalConfigFullDto
   */
  technicalFilters?: Array<string>
  /**
   * Global technical filters applied across datasources.
   * @type {Array<string>}
   * @memberof VerticalConfigFullDto
   */
  globalTechnicalFilters?: Array<string>
  /**
   * Mapping of datasource categories to this vertical.
   * @type {{ [key: string]: Set<string>; }}
   * @memberof VerticalConfigFullDto
   */
  matchingCategories?: { [key: string]: Set<string> }
  /**
   * Tokens that exclude a product from matching this vertical.
   * @type {Set<string>}
   * @memberof VerticalConfigFullDto
   */
  excludingTokensFromCategoriesMatching?: Set<string>
  /**
   * Datasources ignored when computing category matches.
   * @type {Set<string>}
   * @memberof VerticalConfigFullDto
   */
  generationExcludedFromCategoriesMatching?: Set<string>
  /**
   * Attributes ignored when computing attribute suggestions.
   * @type {Set<string>}
   * @memberof VerticalConfigFullDto
   */
  generationExcludedFromAttributesMatching?: Set<string>
  /**
   * Attributes required for the product to belong to this vertical.
   * @type {Set<string>}
   * @memberof VerticalConfigFullDto
   */
  requiredAttributes?: Set<string>
  /**
   * Regenerate URL friendly names even if already generated.
   * @type {boolean}
   * @memberof VerticalConfigFullDto
   */
  forceNameGeneration?: boolean
  /**
   * Mappings of brand aliases to canonical brand names.
   * @type {{ [key: string]: string; }}
   * @memberof VerticalConfigFullDto
   */
  brandsAlias?: { [key: string]: string }
  /**
   * Brands excluded from this vertical.
   * @type {Set<string>}
   * @memberof VerticalConfigFullDto
   */
  brandsExclusion?: Set<string>
  /**
   * Configuration for media aggregation.
   * @type {ResourcesAggregationConfig}
   * @memberof VerticalConfigFullDto
   */
  resourcesConfig?: ResourcesAggregationConfig
  /**
   * Configuration for attribute aggregation and filters.
   * @type {AttributesConfigDto}
   * @memberof VerticalConfigFullDto
   */
  attributesConfig?: AttributesConfigDto
  /**
   * Impact score criteria available for this vertical with localised metadata.
   * @type {{ [key: string]: ImpactScoreCriteriaDto; }}
   * @memberof VerticalConfigFullDto
   */
  availableImpactScoreCriterias?: { [key: string]: ImpactScoreCriteriaDto }
  /**
   * Impact score configuration balancing each criterion, with localised texts.
   * @type {ImpactScoreConfigDto}
   * @memberof VerticalConfigFullDto
   */
  impactScoreConfig?: ImpactScoreConfigDto
  /**
   * Custom subsets defined for this vertical with localised labels.
   * @type {Array<VerticalSubsetDto>}
   * @memberof VerticalConfigFullDto
   */
  subsets?: Array<VerticalSubsetDto>
  /**
   * Subset dedicated to brand exploration with localised labels.
   * @type {VerticalSubsetDto}
   * @memberof VerticalConfigFullDto
   */
  brandsSubset?: VerticalSubsetDto
  /**
   * Barcode aggregation configuration.
   * @type {BarcodeAggregationProperties}
   * @memberof VerticalConfigFullDto
   */
  barcodeConfig?: BarcodeAggregationProperties
  /**
   * Recommendation engine configuration.
   * @type {RecommandationsConfig}
   * @memberof VerticalConfigFullDto
   */
  recommandationsConfig?: RecommandationsConfig
  /**
   * Description aggregation configuration.
   * @type {DescriptionsAggregationConfig}
   * @memberof VerticalConfigFullDto
   */
  descriptionsAggregationConfig?: DescriptionsAggregationConfig
  /**
   * Scoring aggregation configuration.
   * @type {ScoringAggregationConfig}
   * @memberof VerticalConfigFullDto
   */
  scoringAggregationConfig?: ScoringAggregationConfig
  /**
   * Feature groups ordering attributes for UI rendering with localised labels.
   * @type {Array<FeatureGroupDto>}
   * @memberof VerticalConfigFullDto
   */
  featureGroups?: Array<FeatureGroupDto>
  /**
   * Threshold defining how many low scores are considered worsts.
   * @type {number}
   * @memberof VerticalConfigFullDto
   */
  worseLimit?: number
  /**
   * Threshold defining how many high scores are considered bests.
   * @type {number}
   * @memberof VerticalConfigFullDto
   */
  bettersLimit?: number
}

/**
 * Check if a given object implements the VerticalConfigFullDto interface.
 */
export function instanceOfVerticalConfigFullDto(
  value: object
): value is VerticalConfigFullDto {
  return true
}

export function VerticalConfigFullDtoFromJSON(
  json: any
): VerticalConfigFullDto {
  return VerticalConfigFullDtoFromJSONTyped(json, false)
}

export function VerticalConfigFullDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): VerticalConfigFullDto {
  if (json == null) {
    return json
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    enabled: json['enabled'] == null ? undefined : json['enabled'],
    googleTaxonomyId:
      json['googleTaxonomyId'] == null ? undefined : json['googleTaxonomyId'],
    icecatTaxonomyId:
      json['icecatTaxonomyId'] == null ? undefined : json['icecatTaxonomyId'],
    order: json['order'] == null ? undefined : json['order'],
    imageSmall: json['imageSmall'] == null ? undefined : json['imageSmall'],
    imageMedium: json['imageMedium'] == null ? undefined : json['imageMedium'],
    imageLarge: json['imageLarge'] == null ? undefined : json['imageLarge'],
    verticalHomeTitle:
      json['verticalHomeTitle'] == null ? undefined : json['verticalHomeTitle'],
    verticalHomeDescription:
      json['verticalHomeDescription'] == null
        ? undefined
        : json['verticalHomeDescription'],
    verticalHomeUrl:
      json['verticalHomeUrl'] == null ? undefined : json['verticalHomeUrl'],
    verticalMetaTitle:
      json['verticalMetaTitle'] == null ? undefined : json['verticalMetaTitle'],
    verticalMetaDescription:
      json['verticalMetaDescription'] == null
        ? undefined
        : json['verticalMetaDescription'],
    verticalMetaOpenGraphTitle:
      json['verticalMetaOpenGraphTitle'] == null
        ? undefined
        : json['verticalMetaOpenGraphTitle'],
    verticalMetaOpenGraphDescription:
      json['verticalMetaOpenGraphDescription'] == null
        ? undefined
        : json['verticalMetaOpenGraphDescription'],
    wikiPages:
      json['wikiPages'] == null
        ? undefined
        : (json['wikiPages'] as Array<any>).map(WikiPageConfigFromJSON),
    aiConfigs:
      json['aiConfigs'] == null
        ? undefined
        : AiPromptsConfigFromJSON(json['aiConfigs']),
    ecoFilters: json['ecoFilters'] == null ? undefined : json['ecoFilters'],
    technicalFilters:
      json['technicalFilters'] == null ? undefined : json['technicalFilters'],
    globalTechnicalFilters:
      json['globalTechnicalFilters'] == null
        ? undefined
        : json['globalTechnicalFilters'],
    matchingCategories:
      json['matchingCategories'] == null
        ? undefined
        : json['matchingCategories'],
    excludingTokensFromCategoriesMatching:
      json['excludingTokensFromCategoriesMatching'] == null
        ? undefined
        : new Set(json['excludingTokensFromCategoriesMatching']),
    generationExcludedFromCategoriesMatching:
      json['generationExcludedFromCategoriesMatching'] == null
        ? undefined
        : new Set(json['generationExcludedFromCategoriesMatching']),
    generationExcludedFromAttributesMatching:
      json['generationExcludedFromAttributesMatching'] == null
        ? undefined
        : new Set(json['generationExcludedFromAttributesMatching']),
    requiredAttributes:
      json['requiredAttributes'] == null
        ? undefined
        : new Set(json['requiredAttributes']),
    forceNameGeneration:
      json['forceNameGeneration'] == null
        ? undefined
        : json['forceNameGeneration'],
    brandsAlias: json['brandsAlias'] == null ? undefined : json['brandsAlias'],
    brandsExclusion:
      json['brandsExclusion'] == null
        ? undefined
        : new Set(json['brandsExclusion']),
    resourcesConfig:
      json['resourcesConfig'] == null
        ? undefined
        : ResourcesAggregationConfigFromJSON(json['resourcesConfig']),
    attributesConfig:
      json['attributesConfig'] == null
        ? undefined
        : AttributesConfigDtoFromJSON(json['attributesConfig']),
    availableImpactScoreCriterias:
      json['availableImpactScoreCriterias'] == null
        ? undefined
        : mapValues(
            json['availableImpactScoreCriterias'],
            ImpactScoreCriteriaDtoFromJSON
          ),
    impactScoreConfig:
      json['impactScoreConfig'] == null
        ? undefined
        : ImpactScoreConfigDtoFromJSON(json['impactScoreConfig']),
    subsets:
      json['subsets'] == null
        ? undefined
        : (json['subsets'] as Array<any>).map(VerticalSubsetDtoFromJSON),
    brandsSubset:
      json['brandsSubset'] == null
        ? undefined
        : VerticalSubsetDtoFromJSON(json['brandsSubset']),
    barcodeConfig:
      json['barcodeConfig'] == null
        ? undefined
        : BarcodeAggregationPropertiesFromJSON(json['barcodeConfig']),
    recommandationsConfig:
      json['recommandationsConfig'] == null
        ? undefined
        : RecommandationsConfigFromJSON(json['recommandationsConfig']),
    descriptionsAggregationConfig:
      json['descriptionsAggregationConfig'] == null
        ? undefined
        : DescriptionsAggregationConfigFromJSON(
            json['descriptionsAggregationConfig']
          ),
    scoringAggregationConfig:
      json['scoringAggregationConfig'] == null
        ? undefined
        : ScoringAggregationConfigFromJSON(json['scoringAggregationConfig']),
    featureGroups:
      json['featureGroups'] == null
        ? undefined
        : (json['featureGroups'] as Array<any>).map(FeatureGroupDtoFromJSON),
    worseLimit: json['worseLimit'] == null ? undefined : json['worseLimit'],
    bettersLimit:
      json['bettersLimit'] == null ? undefined : json['bettersLimit'],
  }
}

export function VerticalConfigFullDtoToJSON(json: any): VerticalConfigFullDto {
  return VerticalConfigFullDtoToJSONTyped(json, false)
}

export function VerticalConfigFullDtoToJSONTyped(
  value?: VerticalConfigFullDto | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    id: value['id'],
    enabled: value['enabled'],
    googleTaxonomyId: value['googleTaxonomyId'],
    icecatTaxonomyId: value['icecatTaxonomyId'],
    order: value['order'],
    imageSmall: value['imageSmall'],
    imageMedium: value['imageMedium'],
    imageLarge: value['imageLarge'],
    verticalHomeTitle: value['verticalHomeTitle'],
    verticalHomeDescription: value['verticalHomeDescription'],
    verticalHomeUrl: value['verticalHomeUrl'],
    verticalMetaTitle: value['verticalMetaTitle'],
    verticalMetaDescription: value['verticalMetaDescription'],
    verticalMetaOpenGraphTitle: value['verticalMetaOpenGraphTitle'],
    verticalMetaOpenGraphDescription: value['verticalMetaOpenGraphDescription'],
    wikiPages:
      value['wikiPages'] == null
        ? undefined
        : (value['wikiPages'] as Array<any>).map(WikiPageConfigToJSON),
    aiConfigs: AiPromptsConfigToJSON(value['aiConfigs']),
    ecoFilters: value['ecoFilters'],
    technicalFilters: value['technicalFilters'],
    globalTechnicalFilters: value['globalTechnicalFilters'],
    matchingCategories: value['matchingCategories'],
    excludingTokensFromCategoriesMatching:
      value['excludingTokensFromCategoriesMatching'] == null
        ? undefined
        : Array.from(
            value['excludingTokensFromCategoriesMatching'] as Set<any>
          ),
    generationExcludedFromCategoriesMatching:
      value['generationExcludedFromCategoriesMatching'] == null
        ? undefined
        : Array.from(
            value['generationExcludedFromCategoriesMatching'] as Set<any>
          ),
    generationExcludedFromAttributesMatching:
      value['generationExcludedFromAttributesMatching'] == null
        ? undefined
        : Array.from(
            value['generationExcludedFromAttributesMatching'] as Set<any>
          ),
    requiredAttributes:
      value['requiredAttributes'] == null
        ? undefined
        : Array.from(value['requiredAttributes'] as Set<any>),
    forceNameGeneration: value['forceNameGeneration'],
    brandsAlias: value['brandsAlias'],
    brandsExclusion:
      value['brandsExclusion'] == null
        ? undefined
        : Array.from(value['brandsExclusion'] as Set<any>),
    resourcesConfig: ResourcesAggregationConfigToJSON(value['resourcesConfig']),
    attributesConfig: AttributesConfigDtoToJSON(value['attributesConfig']),
    availableImpactScoreCriterias:
      value['availableImpactScoreCriterias'] == null
        ? undefined
        : mapValues(
            value['availableImpactScoreCriterias'],
            ImpactScoreCriteriaDtoToJSON
          ),
    impactScoreConfig: ImpactScoreConfigDtoToJSON(value['impactScoreConfig']),
    subsets:
      value['subsets'] == null
        ? undefined
        : (value['subsets'] as Array<any>).map(VerticalSubsetDtoToJSON),
    brandsSubset: VerticalSubsetDtoToJSON(value['brandsSubset']),
    barcodeConfig: BarcodeAggregationPropertiesToJSON(value['barcodeConfig']),
    recommandationsConfig: RecommandationsConfigToJSON(
      value['recommandationsConfig']
    ),
    descriptionsAggregationConfig: DescriptionsAggregationConfigToJSON(
      value['descriptionsAggregationConfig']
    ),
    scoringAggregationConfig: ScoringAggregationConfigToJSON(
      value['scoringAggregationConfig']
    ),
    featureGroups:
      value['featureGroups'] == null
        ? undefined
        : (value['featureGroups'] as Array<any>).map(FeatureGroupDtoToJSON),
    worseLimit: value['worseLimit'],
    bettersLimit: value['bettersLimit'],
  }
}
