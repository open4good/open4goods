/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductAiDescriptionDto } from './ProductAiDescriptionDto';
import {
    ProductAiDescriptionDtoFromJSON,
    ProductAiDescriptionDtoFromJSONTyped,
    ProductAiDescriptionDtoToJSON,
    ProductAiDescriptionDtoToJSONTyped,
} from './ProductAiDescriptionDto';

/**
 * 
 * @export
 * @interface ProductAiTextsDto
 */
export interface ProductAiTextsDto {
    /**
     * Language key used to resolve the AI descriptions
     * @type {string}
     * @memberof ProductAiTextsDto
     */
    language?: string;
    /**
     * AI generated descriptions keyed by prompt identifier
     * @type {{ [key: string]: ProductAiDescriptionDto; }}
     * @memberof ProductAiTextsDto
     */
    descriptions?: { [key: string]: ProductAiDescriptionDto; };
}

/**
 * Check if a given object implements the ProductAiTextsDto interface.
 */
export function instanceOfProductAiTextsDto(value: object): value is ProductAiTextsDto {
    return true;
}

export function ProductAiTextsDtoFromJSON(json: any): ProductAiTextsDto {
    return ProductAiTextsDtoFromJSONTyped(json, false);
}

export function ProductAiTextsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductAiTextsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'language': json['language'] == null ? undefined : json['language'],
        'descriptions': json['descriptions'] == null ? undefined : (mapValues(json['descriptions'], ProductAiDescriptionDtoFromJSON)),
    };
}

export function ProductAiTextsDtoToJSON(json: any): ProductAiTextsDto {
    return ProductAiTextsDtoToJSONTyped(json, false);
}

export function ProductAiTextsDtoToJSONTyped(value?: ProductAiTextsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'language': value['language'],
        'descriptions': value['descriptions'] == null ? undefined : (mapValues(value['descriptions'], ProductAiDescriptionDtoToJSON)),
    };
}

