/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductExternalIdsDto } from './ProductExternalIdsDto';
import {
    ProductExternalIdsDtoFromJSON,
    ProductExternalIdsDtoFromJSONTyped,
    ProductExternalIdsDtoToJSON,
    ProductExternalIdsDtoToJSONTyped,
} from './ProductExternalIdsDto';
import type { ProductGtinInfoDto } from './ProductGtinInfoDto';
import {
    ProductGtinInfoDtoFromJSON,
    ProductGtinInfoDtoFromJSONTyped,
    ProductGtinInfoDtoToJSON,
    ProductGtinInfoDtoToJSONTyped,
} from './ProductGtinInfoDto';

/**
 * 
 * @export
 * @interface ProductBaseDto
 */
export interface ProductBaseDto {
    /**
     * Product GTIN as stored in the catalogue
     * @type {number}
     * @memberof ProductBaseDto
     */
    gtin?: number;
    /**
     * Creation timestamp expressed in epoch milliseconds
     * @type {number}
     * @memberof ProductBaseDto
     */
    creationDate?: number;
    /**
     * Last modification timestamp expressed in epoch milliseconds
     * @type {number}
     * @memberof ProductBaseDto
     */
    lastChange?: number;
    /**
     * Associated vertical identifier
     * @type {string}
     * @memberof ProductBaseDto
     */
    vertical?: string;
    /**
     * External identifiers assigned to the product
     * @type {ProductExternalIdsDto}
     * @memberof ProductBaseDto
     */
    externalIds?: ProductExternalIdsDto;
    /**
     * Google taxonomy identifier
     * @type {number}
     * @memberof ProductBaseDto
     */
    googleTaxonomyId?: number;
    /**
     * Whether the product is excluded from vertical representation
     * @type {boolean}
     * @memberof ProductBaseDto
     */
    excluded?: boolean;
    /**
     * Reasons explaining why the product is excluded
     * @type {Set<string>}
     * @memberof ProductBaseDto
     */
    excludedCauses?: Set<string>;
    /**
     * Information inferred from the GTIN itself
     * @type {ProductGtinInfoDto}
     * @memberof ProductBaseDto
     */
    gtinInfo?: ProductGtinInfoDto;
    /**
     * Absolute URL of the preferred cover image if available
     * @type {string}
     * @memberof ProductBaseDto
     */
    coverImagePath?: string;
}

/**
 * Check if a given object implements the ProductBaseDto interface.
 */
export function instanceOfProductBaseDto(value: object): value is ProductBaseDto {
    return true;
}

export function ProductBaseDtoFromJSON(json: any): ProductBaseDto {
    return ProductBaseDtoFromJSONTyped(json, false);
}

export function ProductBaseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductBaseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'gtin': json['gtin'] == null ? undefined : json['gtin'],
        'creationDate': json['creationDate'] == null ? undefined : json['creationDate'],
        'lastChange': json['lastChange'] == null ? undefined : json['lastChange'],
        'vertical': json['vertical'] == null ? undefined : json['vertical'],
        'externalIds': json['externalIds'] == null ? undefined : ProductExternalIdsDtoFromJSON(json['externalIds']),
        'googleTaxonomyId': json['googleTaxonomyId'] == null ? undefined : json['googleTaxonomyId'],
        'excluded': json['excluded'] == null ? undefined : json['excluded'],
        'excludedCauses': json['excludedCauses'] == null ? undefined : new Set(json['excludedCauses']),
        'gtinInfo': json['gtinInfo'] == null ? undefined : ProductGtinInfoDtoFromJSON(json['gtinInfo']),
        'coverImagePath': json['coverImagePath'] == null ? undefined : json['coverImagePath'],
    };
}

export function ProductBaseDtoToJSON(json: any): ProductBaseDto {
    return ProductBaseDtoToJSONTyped(json, false);
}

export function ProductBaseDtoToJSONTyped(value?: ProductBaseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gtin': value['gtin'],
        'creationDate': value['creationDate'],
        'lastChange': value['lastChange'],
        'vertical': value['vertical'],
        'externalIds': ProductExternalIdsDtoToJSON(value['externalIds']),
        'googleTaxonomyId': value['googleTaxonomyId'],
        'excluded': value['excluded'],
        'excludedCauses': value['excludedCauses'] == null ? undefined : Array.from(value['excludedCauses'] as Set<any>),
        'gtinInfo': ProductGtinInfoDtoToJSON(value['gtinInfo']),
        'coverImagePath': value['coverImagePath'],
    };
}

