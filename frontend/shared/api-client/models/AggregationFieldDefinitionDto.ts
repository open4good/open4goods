/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AggregationBucketDto } from './AggregationBucketDto';
import {
    AggregationBucketDtoFromJSON,
    AggregationBucketDtoFromJSONTyped,
    AggregationBucketDtoToJSON,
    AggregationBucketDtoToJSONTyped,
} from './AggregationBucketDto';

/**
 * 
 * @export
 * @interface AggregationFieldDefinitionDto
 */
export interface AggregationFieldDefinitionDto {
    /**
     * Minimum value observed across the full product set.
     * @type {number}
     * @memberof AggregationFieldDefinitionDto
     */
    min?: number;
    /**
     * Maximum value observed across the full product set.
     * @type {number}
     * @memberof AggregationFieldDefinitionDto
     */
    max?: number;
    /**
     * Default interval to use for range aggregations when building histograms.
     * @type {number}
     * @memberof AggregationFieldDefinitionDto
     */
    interval?: number;
    /**
     * Whether an additional bucket gathering documents with missing values should be computed.
     * @type {boolean}
     * @memberof AggregationFieldDefinitionDto
     */
    includeMissing?: boolean;
    /**
     * Known buckets for categorical aggregations together with their document counts.
     * @type {Array<AggregationBucketDto>}
     * @memberof AggregationFieldDefinitionDto
     */
    buckets?: Array<AggregationBucketDto>;
}

/**
 * Check if a given object implements the AggregationFieldDefinitionDto interface.
 */
export function instanceOfAggregationFieldDefinitionDto(value: object): value is AggregationFieldDefinitionDto {
    return true;
}

export function AggregationFieldDefinitionDtoFromJSON(json: any): AggregationFieldDefinitionDto {
    return AggregationFieldDefinitionDtoFromJSONTyped(json, false);
}

export function AggregationFieldDefinitionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregationFieldDefinitionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'min': json['min'] == null ? undefined : json['min'],
        'max': json['max'] == null ? undefined : json['max'],
        'interval': json['interval'] == null ? undefined : json['interval'],
        'includeMissing': json['includeMissing'] == null ? undefined : json['includeMissing'],
        'buckets': json['buckets'] == null ? undefined : ((json['buckets'] as Array<any>).map(AggregationBucketDtoFromJSON)),
    };
}

export function AggregationFieldDefinitionDtoToJSON(json: any): AggregationFieldDefinitionDto {
    return AggregationFieldDefinitionDtoToJSONTyped(json, false);
}

export function AggregationFieldDefinitionDtoToJSONTyped(value?: AggregationFieldDefinitionDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'min': value['min'],
        'max': value['max'],
        'interval': value['interval'],
        'includeMissing': value['includeMissing'],
        'buckets': value['buckets'] == null ? undefined : ((value['buckets'] as Array<any>).map(AggregationBucketDtoToJSON)),
    };
}

