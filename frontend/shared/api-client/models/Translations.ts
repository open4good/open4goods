/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Translation } from './Translation';
import {
    TranslationFromJSON,
    TranslationFromJSONTyped,
    TranslationToJSON,
    TranslationToJSONTyped,
} from './Translation';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    LinkToJSONTyped,
} from './Link';

/**
 * 
 * @export
 * @interface Translations
 */
export interface Translations {
    /**
     * 
     * @type {Array<Link>}
     * @memberof Translations
     */
    links?: Array<Link>;
    /**
     * 
     * @type {Array<Translation>}
     * @memberof Translations
     */
    translations?: Array<Translation>;
    /**
     * 
     * @type {string}
     * @memberof Translations
     */
    _default?: string;
}

/**
 * Check if a given object implements the Translations interface.
 */
export function instanceOfTranslations(value: object): value is Translations {
    return true;
}

export function TranslationsFromJSON(json: any): Translations {
    return TranslationsFromJSONTyped(json, false);
}

export function TranslationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Translations {
    if (json == null) {
        return json;
    }
    return {
        
        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(LinkFromJSON)),
        'translations': json['translations'] == null ? undefined : ((json['translations'] as Array<any>).map(TranslationFromJSON)),
        '_default': json['default'] == null ? undefined : json['default'],
    };
}

export function TranslationsToJSON(json: any): Translations {
    return TranslationsToJSONTyped(json, false);
}

export function TranslationsToJSONTyped(value?: Translations | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(LinkToJSON)),
        'translations': value['translations'] == null ? undefined : ((value['translations'] as Array<any>).map(TranslationToJSON)),
        'default': value['_default'],
    };
}

