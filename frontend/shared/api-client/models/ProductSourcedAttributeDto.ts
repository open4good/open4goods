/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductSourcedAttributeDto
 */
export interface ProductSourcedAttributeDto {
    /**
     * Datasource providing the attribute
     * @type {string}
     * @memberof ProductSourcedAttributeDto
     */
    datasourceName?: string;
    /**
     * Attribute value
     * @type {string}
     * @memberof ProductSourcedAttributeDto
     */
    value?: string;
    /**
     * Attribute language when provided
     * @type {string}
     * @memberof ProductSourcedAttributeDto
     */
    language?: string;
    /**
     * Icecat taxonomy identifier for the attribute
     * @type {number}
     * @memberof ProductSourcedAttributeDto
     */
    icecatTaxonomyId?: number;
    /**
     * Attribute label provided by the datasource
     * @type {string}
     * @memberof ProductSourcedAttributeDto
     */
    name?: string;
}

/**
 * Check if a given object implements the ProductSourcedAttributeDto interface.
 */
export function instanceOfProductSourcedAttributeDto(value: object): value is ProductSourcedAttributeDto {
    return true;
}

export function ProductSourcedAttributeDtoFromJSON(json: any): ProductSourcedAttributeDto {
    return ProductSourcedAttributeDtoFromJSONTyped(json, false);
}

export function ProductSourcedAttributeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductSourcedAttributeDto {
    if (json == null) {
        return json;
    }
    return {
        
        'datasourceName': json['datasourceName'] == null ? undefined : json['datasourceName'],
        'value': json['value'] == null ? undefined : json['value'],
        'language': json['language'] == null ? undefined : json['language'],
        'icecatTaxonomyId': json['icecatTaxonomyId'] == null ? undefined : json['icecatTaxonomyId'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function ProductSourcedAttributeDtoToJSON(json: any): ProductSourcedAttributeDto {
    return ProductSourcedAttributeDtoToJSONTyped(json, false);
}

export function ProductSourcedAttributeDtoToJSONTyped(value?: ProductSourcedAttributeDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'datasourceName': value['datasourceName'],
        'value': value['value'],
        'language': value['language'],
        'icecatTaxonomyId': value['icecatTaxonomyId'],
        'name': value['name'],
    };
}

