/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeedbackSubmissionResponseDto
 */
export interface FeedbackSubmissionResponseDto {
    /**
     * Indique si le ticket GitHub a été créé avec succès.
     * @type {boolean}
     * @memberof FeedbackSubmissionResponseDto
     */
    success?: boolean;
    /**
     * Numéro GitHub de l'issue créée.
     * @type {number}
     * @memberof FeedbackSubmissionResponseDto
     */
    issueNumber?: number;
    /**
     * URL publique de l'issue GitHub.
     * @type {string}
     * @memberof FeedbackSubmissionResponseDto
     */
    issueUrl?: string;
    /**
     * Message informatif pour l'utilisateur.
     * @type {string}
     * @memberof FeedbackSubmissionResponseDto
     */
    message?: string;
}

/**
 * Check if a given object implements the FeedbackSubmissionResponseDto interface.
 */
export function instanceOfFeedbackSubmissionResponseDto(value: object): value is FeedbackSubmissionResponseDto {
    return true;
}

export function FeedbackSubmissionResponseDtoFromJSON(json: any): FeedbackSubmissionResponseDto {
    return FeedbackSubmissionResponseDtoFromJSONTyped(json, false);
}

export function FeedbackSubmissionResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedbackSubmissionResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'] == null ? undefined : json['success'],
        'issueNumber': json['issueNumber'] == null ? undefined : json['issueNumber'],
        'issueUrl': json['issueUrl'] == null ? undefined : json['issueUrl'],
        'message': json['message'] == null ? undefined : json['message'],
    };
}

export function FeedbackSubmissionResponseDtoToJSON(json: any): FeedbackSubmissionResponseDto {
    return FeedbackSubmissionResponseDtoToJSONTyped(json, false);
}

export function FeedbackSubmissionResponseDtoToJSONTyped(value?: FeedbackSubmissionResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'issueNumber': value['issueNumber'],
        'issueUrl': value['issueUrl'],
        'message': value['message'],
    };
}

