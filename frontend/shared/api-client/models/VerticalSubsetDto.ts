/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubsetCriteria } from './SubsetCriteria';
import {
    SubsetCriteriaFromJSON,
    SubsetCriteriaFromJSONTyped,
    SubsetCriteriaToJSON,
    SubsetCriteriaToJSONTyped,
} from './SubsetCriteria';

/**
 * 
 * @export
 * @interface VerticalSubsetDto
 */
export interface VerticalSubsetDto {
    /**
     * Identifier of the subset.
     * @type {string}
     * @memberof VerticalSubsetDto
     */
    id?: string;
    /**
     * Group identifier allowing subsets to be clustered together.
     * @type {string}
     * @memberof VerticalSubsetDto
     */
    group?: string;
    /**
     * Criteria defining the subset membership.
     * @type {Array<SubsetCriteria>}
     * @memberof VerticalSubsetDto
     */
    criterias?: Array<SubsetCriteria>;
    /**
     * Image illustrating the subset.
     * @type {string}
     * @memberof VerticalSubsetDto
     */
    image?: string;
    /**
     * Localised URL pointing to the subset page.
     * @type {string}
     * @memberof VerticalSubsetDto
     */
    url?: string;
    /**
     * Localised caption displayed when listing subsets.
     * @type {string}
     * @memberof VerticalSubsetDto
     */
    caption?: string;
    /**
     * Localised title displayed for the subset.
     * @type {string}
     * @memberof VerticalSubsetDto
     */
    title?: string;
    /**
     * Localised description detailing the subset purpose.
     * @type {string}
     * @memberof VerticalSubsetDto
     */
    description?: string;
}

/**
 * Check if a given object implements the VerticalSubsetDto interface.
 */
export function instanceOfVerticalSubsetDto(value: object): value is VerticalSubsetDto {
    return true;
}

export function VerticalSubsetDtoFromJSON(json: any): VerticalSubsetDto {
    return VerticalSubsetDtoFromJSONTyped(json, false);
}

export function VerticalSubsetDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerticalSubsetDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'group': json['group'] == null ? undefined : json['group'],
        'criterias': json['criterias'] == null ? undefined : ((json['criterias'] as Array<any>).map(SubsetCriteriaFromJSON)),
        'image': json['image'] == null ? undefined : json['image'],
        'url': json['url'] == null ? undefined : json['url'],
        'caption': json['caption'] == null ? undefined : json['caption'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function VerticalSubsetDtoToJSON(json: any): VerticalSubsetDto {
    return VerticalSubsetDtoToJSONTyped(json, false);
}

export function VerticalSubsetDtoToJSONTyped(value?: VerticalSubsetDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'group': value['group'],
        'criterias': value['criterias'] == null ? undefined : ((value['criterias'] as Array<any>).map(SubsetCriteriaToJSON)),
        'image': value['image'],
        'url': value['url'],
        'caption': value['caption'],
        'title': value['title'],
        'description': value['description'],
    };
}

