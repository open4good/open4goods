/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { AiSource } from './AiSource'
import {
  AiSourceFromJSON,
  AiSourceFromJSONTyped,
  AiSourceToJSON,
  AiSourceToJSONTyped,
} from './AiSource'
import type { AiAttribute } from './AiAttribute'
import {
  AiAttributeFromJSON,
  AiAttributeFromJSONTyped,
  AiAttributeToJSON,
  AiAttributeToJSONTyped,
} from './AiAttribute'

/**
 *
 * @export
 * @interface AiReview
 */
export interface AiReview {
  /**
   *
   * @type {string}
   * @memberof AiReview
   */
  description: string
  /**
   *
   * @type {string}
   * @memberof AiReview
   */
  shortDescription: string
  /**
   *
   * @type {string}
   * @memberof AiReview
   */
  mediumTitle: string
  /**
   *
   * @type {string}
   * @memberof AiReview
   */
  shortTitle: string
  /**
   *
   * @type {string}
   * @memberof AiReview
   */
  technicalReview: string
  /**
   *
   * @type {string}
   * @memberof AiReview
   */
  ecologicalReview: string
  /**
   *
   * @type {string}
   * @memberof AiReview
   */
  summary: string
  /**
   *
   * @type {Array<string>}
   * @memberof AiReview
   */
  pros: Array<string>
  /**
   *
   * @type {Array<string>}
   * @memberof AiReview
   */
  cons: Array<string>
  /**
   *
   * @type {Array<AiSource>}
   * @memberof AiReview
   */
  sources: Array<AiSource>
  /**
   *
   * @type {Array<AiAttribute>}
   * @memberof AiReview
   */
  attributes: Array<AiAttribute>
  /**
   *
   * @type {string}
   * @memberof AiReview
   */
  dataQuality: string
}

/**
 * Check if a given object implements the AiReview interface.
 */
export function instanceOfAiReview(value: object): value is AiReview {
  if (!('description' in value) || value['description'] === undefined)
    return false
  if (!('shortDescription' in value) || value['shortDescription'] === undefined)
    return false
  if (!('mediumTitle' in value) || value['mediumTitle'] === undefined)
    return false
  if (!('shortTitle' in value) || value['shortTitle'] === undefined)
    return false
  if (!('technicalReview' in value) || value['technicalReview'] === undefined)
    return false
  if (!('ecologicalReview' in value) || value['ecologicalReview'] === undefined)
    return false
  if (!('summary' in value) || value['summary'] === undefined) return false
  if (!('pros' in value) || value['pros'] === undefined) return false
  if (!('cons' in value) || value['cons'] === undefined) return false
  if (!('sources' in value) || value['sources'] === undefined) return false
  if (!('attributes' in value) || value['attributes'] === undefined)
    return false
  if (!('dataQuality' in value) || value['dataQuality'] === undefined)
    return false
  return true
}

export function AiReviewFromJSON(json: any): AiReview {
  return AiReviewFromJSONTyped(json, false)
}

export function AiReviewFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AiReview {
  if (json == null) {
    return json
  }
  return {
    description: json['description'],
    shortDescription: json['short_description'],
    mediumTitle: json['mediumTitle'],
    shortTitle: json['shortTitle'],
    technicalReview: json['technicalReview'],
    ecologicalReview: json['ecologicalReview'],
    summary: json['summary'],
    pros: json['pros'],
    cons: json['cons'],
    sources: (json['sources'] as Array<any>).map(AiSourceFromJSON),
    attributes: (json['attributes'] as Array<any>).map(AiAttributeFromJSON),
    dataQuality: json['dataQuality'],
  }
}

export function AiReviewToJSON(json: any): AiReview {
  return AiReviewToJSONTyped(json, false)
}

export function AiReviewToJSONTyped(
  value?: AiReview | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    description: value['description'],
    short_description: value['shortDescription'],
    mediumTitle: value['mediumTitle'],
    shortTitle: value['shortTitle'],
    technicalReview: value['technicalReview'],
    ecologicalReview: value['ecologicalReview'],
    summary: value['summary'],
    pros: value['pros'],
    cons: value['cons'],
    sources: (value['sources'] as Array<any>).map(AiSourceToJSON),
    attributes: (value['attributes'] as Array<any>).map(AiAttributeToJSON),
    dataQuality: value['dataQuality'],
  }
}
