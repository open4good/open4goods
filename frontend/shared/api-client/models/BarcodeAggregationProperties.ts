/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface BarcodeAggregationProperties
 */
export interface BarcodeAggregationProperties {
  /**
   *
   * @type {number}
   * @memberof BarcodeAggregationProperties
   */
  qrCodeSize?: number
  /**
   *
   * @type {number}
   * @memberof BarcodeAggregationProperties
   */
  gtinSize?: number
  /**
   *
   * @type {number}
   * @memberof BarcodeAggregationProperties
   */
  datamatrixSize?: number
}

/**
 * Check if a given object implements the BarcodeAggregationProperties interface.
 */
export function instanceOfBarcodeAggregationProperties(
  value: object
): value is BarcodeAggregationProperties {
  return true
}

export function BarcodeAggregationPropertiesFromJSON(
  json: any
): BarcodeAggregationProperties {
  return BarcodeAggregationPropertiesFromJSONTyped(json, false)
}

export function BarcodeAggregationPropertiesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): BarcodeAggregationProperties {
  if (json == null) {
    return json
  }
  return {
    qrCodeSize: json['qrCodeSize'] == null ? undefined : json['qrCodeSize'],
    gtinSize: json['gtinSize'] == null ? undefined : json['gtinSize'],
    datamatrixSize:
      json['datamatrixSize'] == null ? undefined : json['datamatrixSize'],
  }
}

export function BarcodeAggregationPropertiesToJSON(
  json: any
): BarcodeAggregationProperties {
  return BarcodeAggregationPropertiesToJSONTyped(json, false)
}

export function BarcodeAggregationPropertiesToJSONTyped(
  value?: BarcodeAggregationProperties | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    qrCodeSize: value['qrCodeSize'],
    gtinSize: value['gtinSize'],
    datamatrixSize: value['datamatrixSize'],
  }
}
