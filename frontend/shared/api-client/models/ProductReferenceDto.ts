/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Details about the product ranked immediately above
 * @export
 * @interface ProductReferenceDto
 */
export interface ProductReferenceDto {
    /**
     * GTIN identifier of the referenced product
     * @type {number}
     * @memberof ProductReferenceDto
     */
    id?: number;
    /**
     * Fully qualified slug pointing to the product page
     * @type {string}
     * @memberof ProductReferenceDto
     */
    fullSlug?: string;
    /**
     * Best resolved product name
     * @type {string}
     * @memberof ProductReferenceDto
     */
    bestName?: string;
    /**
     * Brand associated with the product
     * @type {string}
     * @memberof ProductReferenceDto
     */
    brand?: string;
    /**
     * Model identifier exposed by the datasource
     * @type {string}
     * @memberof ProductReferenceDto
     */
    model?: string;
}

/**
 * Check if a given object implements the ProductReferenceDto interface.
 */
export function instanceOfProductReferenceDto(value: object): value is ProductReferenceDto {
    return true;
}

export function ProductReferenceDtoFromJSON(json: any): ProductReferenceDto {
    return ProductReferenceDtoFromJSONTyped(json, false);
}

export function ProductReferenceDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductReferenceDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'fullSlug': json['fullSlug'] == null ? undefined : json['fullSlug'],
        'bestName': json['bestName'] == null ? undefined : json['bestName'],
        'brand': json['brand'] == null ? undefined : json['brand'],
        'model': json['model'] == null ? undefined : json['model'],
    };
}

export function ProductReferenceDtoToJSON(json: any): ProductReferenceDto {
    return ProductReferenceDtoToJSONTyped(json, false);
}

export function ProductReferenceDtoToJSONTyped(value?: ProductReferenceDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fullSlug': value['fullSlug'],
        'bestName': value['bestName'],
        'brand': value['brand'],
        'model': value['model'],
    };
}

