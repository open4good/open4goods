/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductCardinalityDto
 */
export interface ProductCardinalityDto {
    /**
     * Minimal value encountered
     * @type {number}
     * @memberof ProductCardinalityDto
     */
    min?: number;
    /**
     * Maximal value encountered
     * @type {number}
     * @memberof ProductCardinalityDto
     */
    max?: number;
    /**
     * Average value across the population
     * @type {number}
     * @memberof ProductCardinalityDto
     */
    avg?: number;
    /**
     * Number of elements composing the population
     * @type {number}
     * @memberof ProductCardinalityDto
     */
    count?: number;
    /**
     * Sum of the values
     * @type {number}
     * @memberof ProductCardinalityDto
     */
    sum?: number;
    /**
     * Current value
     * @type {number}
     * @memberof ProductCardinalityDto
     */
    value?: number;
}

/**
 * Check if a given object implements the ProductCardinalityDto interface.
 */
export function instanceOfProductCardinalityDto(value: object): value is ProductCardinalityDto {
    return true;
}

export function ProductCardinalityDtoFromJSON(json: any): ProductCardinalityDto {
    return ProductCardinalityDtoFromJSONTyped(json, false);
}

export function ProductCardinalityDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductCardinalityDto {
    if (json == null) {
        return json;
    }
    return {
        
        'min': json['min'] == null ? undefined : json['min'],
        'max': json['max'] == null ? undefined : json['max'],
        'avg': json['avg'] == null ? undefined : json['avg'],
        'count': json['count'] == null ? undefined : json['count'],
        'sum': json['sum'] == null ? undefined : json['sum'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function ProductCardinalityDtoToJSON(json: any): ProductCardinalityDto {
    return ProductCardinalityDtoToJSONTyped(json, false);
}

export function ProductCardinalityDtoToJSONTyped(value?: ProductCardinalityDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'min': value['min'],
        'max': value['max'],
        'avg': value['avg'],
        'count': value['count'],
        'sum': value['sum'],
        'value': value['value'],
    };
}

