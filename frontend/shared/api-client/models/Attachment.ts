/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Hierarchy } from './Hierarchy';
import {
    HierarchyFromJSON,
    HierarchyFromJSONTyped,
    HierarchyToJSON,
    HierarchyToJSONTyped,
} from './Hierarchy';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    LinkToJSONTyped,
} from './Link';

/**
 * 
 * @export
 * @interface Attachment
 */
export interface Attachment {
    /**
     * 
     * @type {Array<Link>}
     * @memberof Attachment
     */
    links?: Array<Link>;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof Attachment
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof Attachment
     */
    longSize?: number;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    pageId?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    pageVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    mimeType?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    author?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    authorName?: string;
    /**
     * 
     * @type {Date}
     * @memberof Attachment
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    xwikiRelativeUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    xwikiAbsoluteUrl?: string;
    /**
     * 
     * @type {Hierarchy}
     * @memberof Attachment
     */
    hierarchy?: Hierarchy;
}

/**
 * Check if a given object implements the Attachment interface.
 */
export function instanceOfAttachment(value: object): value is Attachment {
    return true;
}

export function AttachmentFromJSON(json: any): Attachment {
    return AttachmentFromJSONTyped(json, false);
}

export function AttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Attachment {
    if (json == null) {
        return json;
    }
    return {
        
        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(LinkFromJSON)),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'size': json['size'] == null ? undefined : json['size'],
        'longSize': json['longSize'] == null ? undefined : json['longSize'],
        'version': json['version'] == null ? undefined : json['version'],
        'pageId': json['pageId'] == null ? undefined : json['pageId'],
        'pageVersion': json['pageVersion'] == null ? undefined : json['pageVersion'],
        'mimeType': json['mimeType'] == null ? undefined : json['mimeType'],
        'author': json['author'] == null ? undefined : json['author'],
        'authorName': json['authorName'] == null ? undefined : json['authorName'],
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'xwikiRelativeUrl': json['xwikiRelativeUrl'] == null ? undefined : json['xwikiRelativeUrl'],
        'xwikiAbsoluteUrl': json['xwikiAbsoluteUrl'] == null ? undefined : json['xwikiAbsoluteUrl'],
        'hierarchy': json['hierarchy'] == null ? undefined : HierarchyFromJSON(json['hierarchy']),
    };
}

export function AttachmentToJSON(json: any): Attachment {
    return AttachmentToJSONTyped(json, false);
}

export function AttachmentToJSONTyped(value?: Attachment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(LinkToJSON)),
        'id': value['id'],
        'name': value['name'],
        'size': value['size'],
        'longSize': value['longSize'],
        'version': value['version'],
        'pageId': value['pageId'],
        'pageVersion': value['pageVersion'],
        'mimeType': value['mimeType'],
        'author': value['author'],
        'authorName': value['authorName'],
        'date': value['date'] == null ? undefined : ((value['date']).toISOString()),
        'xwikiRelativeUrl': value['xwikiRelativeUrl'],
        'xwikiAbsoluteUrl': value['xwikiAbsoluteUrl'],
        'hierarchy': HierarchyToJSON(value['hierarchy']),
    };
}

