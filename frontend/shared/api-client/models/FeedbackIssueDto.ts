/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeedbackIssueDto
 */
export interface FeedbackIssueDto {
    /**
     * Identifiant technique de l'issue (valeur GitHub).
     * @type {string}
     * @memberof FeedbackIssueDto
     */
    id?: string;
    /**
     * Numéro séquentiel de l'issue sur GitHub.
     * @type {number}
     * @memberof FeedbackIssueDto
     */
    number?: number;
    /**
     * Titre de l'issue.
     * @type {string}
     * @memberof FeedbackIssueDto
     */
    title?: string;
    /**
     * Lien public vers l'issue GitHub.
     * @type {string}
     * @memberof FeedbackIssueDto
     */
    url?: string;
    /**
     * Nombre total de votes enregistrés pour cette issue.
     * @type {number}
     * @memberof FeedbackIssueDto
     */
    votes?: number;
}

/**
 * Check if a given object implements the FeedbackIssueDto interface.
 */
export function instanceOfFeedbackIssueDto(value: object): value is FeedbackIssueDto {
    return true;
}

export function FeedbackIssueDtoFromJSON(json: any): FeedbackIssueDto {
    return FeedbackIssueDtoFromJSONTyped(json, false);
}

export function FeedbackIssueDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedbackIssueDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'number': json['number'] == null ? undefined : json['number'],
        'title': json['title'] == null ? undefined : json['title'],
        'url': json['url'] == null ? undefined : json['url'],
        'votes': json['votes'] == null ? undefined : json['votes'],
    };
}

export function FeedbackIssueDtoToJSON(json: any): FeedbackIssueDto {
    return FeedbackIssueDtoToJSONTyped(json, false);
}

export function FeedbackIssueDtoToJSONTyped(value?: FeedbackIssueDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'number': value['number'],
        'title': value['title'],
        'url': value['url'],
        'votes': value['votes'],
    };
}

