/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { Property } from './Property'
import {
  PropertyFromJSON,
  PropertyFromJSONTyped,
  PropertyToJSON,
  PropertyToJSONTyped,
} from './Property'
import type { Link } from './Link'
import {
  LinkFromJSON,
  LinkFromJSONTyped,
  LinkToJSON,
  LinkToJSONTyped,
} from './Link'

/**
 *
 * @export
 * @interface Class
 */
export interface Class {
  /**
   *
   * @type {Array<Link>}
   * @memberof Class
   */
  links?: Array<Link>
  /**
   *
   * @type {string}
   * @memberof Class
   */
  id?: string
  /**
   *
   * @type {string}
   * @memberof Class
   */
  name?: string
  /**
   *
   * @type {Array<Property>}
   * @memberof Class
   */
  properties?: Array<Property>
}

/**
 * Check if a given object implements the Class interface.
 */
export function instanceOfClass(value: object): value is Class {
  return true
}

export function ClassFromJSON(json: any): Class {
  return ClassFromJSONTyped(json, false)
}

export function ClassFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Class {
  if (json == null) {
    return json
  }
  return {
    links:
      json['links'] == null
        ? undefined
        : (json['links'] as Array<any>).map(LinkFromJSON),
    id: json['id'] == null ? undefined : json['id'],
    name: json['name'] == null ? undefined : json['name'],
    properties:
      json['properties'] == null
        ? undefined
        : (json['properties'] as Array<any>).map(PropertyFromJSON),
  }
}

export function ClassToJSON(json: any): Class {
  return ClassToJSONTyped(json, false)
}

export function ClassToJSONTyped(
  value?: Class | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    links:
      value['links'] == null
        ? undefined
        : (value['links'] as Array<any>).map(LinkToJSON),
    id: value['id'],
    name: value['name'],
    properties:
      value['properties'] == null
        ? undefined
        : (value['properties'] as Array<any>).map(PropertyToJSON),
  }
}
