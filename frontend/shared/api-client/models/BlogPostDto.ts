/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BlogPostDto
 */
export interface BlogPostDto {
    /**
     * URL slug identifying the post
     * @type {string}
     * @memberof BlogPostDto
     */
    url?: string;
    /**
     * Post title that will align with the requested domainLanguage when localisation is enabled.
     * @type {string}
     * @memberof BlogPostDto
     */
    title?: string;
    /**
     * Author full name, unaffected by domainLanguage
     * @type {string}
     * @memberof BlogPostDto
     */
    author?: string;
    /**
     * Post summary prepared for domainLanguage-driven localisation.
     * @type {string}
     * @memberof BlogPostDto
     */
    summary?: string;
    /**
     * HTML body that will match the requested domainLanguage when localisation is in place.
     * @type {string}
     * @memberof BlogPostDto
     */
    body?: string;
    /**
     * Post categories (labels expected to follow the requested domainLanguage once implemented)
     * @type {Array<string>}
     * @memberof BlogPostDto
     */
    category?: Array<string>;
    /**
     * Cover image URL
     * @type {string}
     * @memberof BlogPostDto
     */
    image?: string;
    /**
     * Direct edit link
     * @type {string}
     * @memberof BlogPostDto
     */
    editLink?: string;
    /**
     * Creation timestamp ms
     * @type {number}
     * @memberof BlogPostDto
     */
    createdMs?: number;
    /**
     * Modification timestamp ms
     * @type {number}
     * @memberof BlogPostDto
     */
    modifiedMs?: number;
}

/**
 * Check if a given object implements the BlogPostDto interface.
 */
export function instanceOfBlogPostDto(value: object): value is BlogPostDto {
    return true;
}

export function BlogPostDtoFromJSON(json: any): BlogPostDto {
    return BlogPostDtoFromJSONTyped(json, false);
}

export function BlogPostDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlogPostDto {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'] == null ? undefined : json['url'],
        'title': json['title'] == null ? undefined : json['title'],
        'author': json['author'] == null ? undefined : json['author'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'body': json['body'] == null ? undefined : json['body'],
        'category': json['category'] == null ? undefined : json['category'],
        'image': json['image'] == null ? undefined : json['image'],
        'editLink': json['editLink'] == null ? undefined : json['editLink'],
        'createdMs': json['createdMs'] == null ? undefined : json['createdMs'],
        'modifiedMs': json['modifiedMs'] == null ? undefined : json['modifiedMs'],
    };
}

export function BlogPostDtoToJSON(json: any): BlogPostDto {
    return BlogPostDtoToJSONTyped(json, false);
}

export function BlogPostDtoToJSONTyped(value?: BlogPostDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'title': value['title'],
        'author': value['author'],
        'summary': value['summary'],
        'body': value['body'],
        'category': value['category'],
        'image': value['image'],
        'editLink': value['editLink'],
        'createdMs': value['createdMs'],
        'modifiedMs': value['modifiedMs'],
    };
}

