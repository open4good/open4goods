/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeedbackSubmissionRequestDto
 */
export interface FeedbackSubmissionRequestDto {
    /**
     * Category of the feedback to submit.
     * @type {string}
     * @memberof FeedbackSubmissionRequestDto
     */
    type: FeedbackSubmissionRequestDtoTypeEnum;
    /**
     * Short title summarising the feedback.
     * @type {string}
     * @memberof FeedbackSubmissionRequestDto
     */
    title: string;
    /**
     * Detailed message explaining the bug or idea.
     * @type {string}
     * @memberof FeedbackSubmissionRequestDto
     */
    message: string;
    /**
     * URL depuis laquelle l'utilisateur a soumis le feedback.
     * @type {string}
     * @memberof FeedbackSubmissionRequestDto
     */
    url?: string;
    /**
     * Nom affiché pour l'auteur du feedback.
     * @type {string}
     * @memberof FeedbackSubmissionRequestDto
     */
    author?: string;
    /**
     * Jeton retourné par le widget hCaptcha.
     * @type {string}
     * @memberof FeedbackSubmissionRequestDto
     */
    hCaptchaResponse: string;
}


/**
 * @export
 */
export const FeedbackSubmissionRequestDtoTypeEnum = {
    Idea: 'IDEA',
    Bug: 'BUG'
} as const;
export type FeedbackSubmissionRequestDtoTypeEnum = typeof FeedbackSubmissionRequestDtoTypeEnum[keyof typeof FeedbackSubmissionRequestDtoTypeEnum];


/**
 * Check if a given object implements the FeedbackSubmissionRequestDto interface.
 */
export function instanceOfFeedbackSubmissionRequestDto(value: object): value is FeedbackSubmissionRequestDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('hCaptchaResponse' in value) || value['hCaptchaResponse'] === undefined) return false;
    return true;
}

export function FeedbackSubmissionRequestDtoFromJSON(json: any): FeedbackSubmissionRequestDto {
    return FeedbackSubmissionRequestDtoFromJSONTyped(json, false);
}

export function FeedbackSubmissionRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedbackSubmissionRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'title': json['title'],
        'message': json['message'],
        'url': json['url'] == null ? undefined : json['url'],
        'author': json['author'] == null ? undefined : json['author'],
        'hCaptchaResponse': json['h-captcha-response'],
    };
}

export function FeedbackSubmissionRequestDtoToJSON(json: any): FeedbackSubmissionRequestDto {
    return FeedbackSubmissionRequestDtoToJSONTyped(json, false);
}

export function FeedbackSubmissionRequestDtoToJSONTyped(value?: FeedbackSubmissionRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'title': value['title'],
        'message': value['message'],
        'url': value['url'],
        'author': value['author'],
        'h-captcha-response': value['hCaptchaResponse'],
    };
}

