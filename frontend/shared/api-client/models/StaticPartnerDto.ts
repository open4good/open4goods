/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StaticPartnerDto
 */
export interface StaticPartnerDto {
    /**
     * Display name of the partner.
     * @type {string}
     * @memberof StaticPartnerDto
     */
    name?: string;
    /**
     * XWiki bloc identifier containing the partner content.
     * @type {string}
     * @memberof StaticPartnerDto
     */
    blocId?: string;
    /**
     * Public URL pointing to the partner website.
     * @type {string}
     * @memberof StaticPartnerDto
     */
    url?: string;
    /**
     * Relative path to the partner image served by the frontend.
     * @type {string}
     * @memberof StaticPartnerDto
     */
    imageUrl?: string;
}

/**
 * Check if a given object implements the StaticPartnerDto interface.
 */
export function instanceOfStaticPartnerDto(value: object): value is StaticPartnerDto {
    return true;
}

export function StaticPartnerDtoFromJSON(json: any): StaticPartnerDto {
    return StaticPartnerDtoFromJSONTyped(json, false);
}

export function StaticPartnerDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StaticPartnerDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'blocId': json['blocId'] == null ? undefined : json['blocId'],
        'url': json['url'] == null ? undefined : json['url'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
    };
}

export function StaticPartnerDtoToJSON(json: any): StaticPartnerDto {
    return StaticPartnerDtoToJSONTyped(json, false);
}

export function StaticPartnerDtoToJSONTyped(value?: StaticPartnerDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'blocId': value['blocId'],
        'url': value['url'],
        'imageUrl': value['imageUrl'],
    };
}

