/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { Objects } from './Objects'
import {
  ObjectsFromJSON,
  ObjectsFromJSONTyped,
  ObjectsToJSON,
  ObjectsToJSONTyped,
} from './Objects'
import type { Page } from './Page'
import {
  PageFromJSON,
  PageFromJSONTyped,
  PageToJSON,
  PageToJSONTyped,
} from './Page'

/**
 *
 * @export
 * @interface FullPage
 */
export interface FullPage {
  /**
   *
   * @type {string}
   * @memberof FullPage
   */
  htmlContent?: string
  /**
   *
   * @type {Page}
   * @memberof FullPage
   */
  wikiPage?: Page
  /**
   *
   * @type {Objects}
   * @memberof FullPage
   */
  objects?: Objects
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof FullPage
   */
  properties?: { [key: string]: string }
}

/**
 * Check if a given object implements the FullPage interface.
 */
export function instanceOfFullPage(value: object): value is FullPage {
  return true
}

export function FullPageFromJSON(json: any): FullPage {
  return FullPageFromJSONTyped(json, false)
}

export function FullPageFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FullPage {
  if (json == null) {
    return json
  }
  return {
    htmlContent: json['htmlContent'] == null ? undefined : json['htmlContent'],
    wikiPage:
      json['wikiPage'] == null ? undefined : PageFromJSON(json['wikiPage']),
    objects:
      json['objects'] == null ? undefined : ObjectsFromJSON(json['objects']),
    properties: json['properties'] == null ? undefined : json['properties'],
  }
}

export function FullPageToJSON(json: any): FullPage {
  return FullPageToJSONTyped(json, false)
}

export function FullPageToJSONTyped(
  value?: FullPage | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    htmlContent: value['htmlContent'],
    wikiPage: PageToJSON(value['wikiPage']),
    objects: ObjectsToJSON(value['objects']),
    properties: value['properties'],
  }
}
