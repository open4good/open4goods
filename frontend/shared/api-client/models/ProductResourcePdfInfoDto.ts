/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductResourcePdfInfoDto
 */
export interface ProductResourcePdfInfoDto {
    /**
     * Title extracted from the PDF metadata
     * @type {string}
     * @memberof ProductResourcePdfInfoDto
     */
    metadataTitle?: string;
    /**
     * Title extracted from the PDF content
     * @type {string}
     * @memberof ProductResourcePdfInfoDto
     */
    extractedTitle?: string;
    /**
     * Number of pages contained in the document
     * @type {number}
     * @memberof ProductResourcePdfInfoDto
     */
    numberOfPages?: number;
    /**
     * Author declared in the metadata
     * @type {string}
     * @memberof ProductResourcePdfInfoDto
     */
    author?: string;
    /**
     * Subject declared in the metadata
     * @type {string}
     * @memberof ProductResourcePdfInfoDto
     */
    subject?: string;
    /**
     * Keywords declared in the metadata
     * @type {string}
     * @memberof ProductResourcePdfInfoDto
     */
    keywords?: string;
    /**
     * Creation timestamp in epoch milliseconds
     * @type {number}
     * @memberof ProductResourcePdfInfoDto
     */
    creationDate?: number;
    /**
     * Last modification timestamp in epoch milliseconds
     * @type {number}
     * @memberof ProductResourcePdfInfoDto
     */
    modificationDate?: number;
    /**
     * Producer declared in the metadata
     * @type {string}
     * @memberof ProductResourcePdfInfoDto
     */
    producer?: string;
    /**
     * Detected language
     * @type {string}
     * @memberof ProductResourcePdfInfoDto
     */
    language?: string;
    /**
     * Confidence score associated with the detected language
     * @type {number}
     * @memberof ProductResourcePdfInfoDto
     */
    languageConfidence?: number;
}

/**
 * Check if a given object implements the ProductResourcePdfInfoDto interface.
 */
export function instanceOfProductResourcePdfInfoDto(value: object): value is ProductResourcePdfInfoDto {
    return true;
}

export function ProductResourcePdfInfoDtoFromJSON(json: any): ProductResourcePdfInfoDto {
    return ProductResourcePdfInfoDtoFromJSONTyped(json, false);
}

export function ProductResourcePdfInfoDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductResourcePdfInfoDto {
    if (json == null) {
        return json;
    }
    return {
        
        'metadataTitle': json['metadataTitle'] == null ? undefined : json['metadataTitle'],
        'extractedTitle': json['extractedTitle'] == null ? undefined : json['extractedTitle'],
        'numberOfPages': json['numberOfPages'] == null ? undefined : json['numberOfPages'],
        'author': json['author'] == null ? undefined : json['author'],
        'subject': json['subject'] == null ? undefined : json['subject'],
        'keywords': json['keywords'] == null ? undefined : json['keywords'],
        'creationDate': json['creationDate'] == null ? undefined : json['creationDate'],
        'modificationDate': json['modificationDate'] == null ? undefined : json['modificationDate'],
        'producer': json['producer'] == null ? undefined : json['producer'],
        'language': json['language'] == null ? undefined : json['language'],
        'languageConfidence': json['languageConfidence'] == null ? undefined : json['languageConfidence'],
    };
}

export function ProductResourcePdfInfoDtoToJSON(json: any): ProductResourcePdfInfoDto {
    return ProductResourcePdfInfoDtoToJSONTyped(json, false);
}

export function ProductResourcePdfInfoDtoToJSONTyped(value?: ProductResourcePdfInfoDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'metadataTitle': value['metadataTitle'],
        'extractedTitle': value['extractedTitle'],
        'numberOfPages': value['numberOfPages'],
        'author': value['author'],
        'subject': value['subject'],
        'keywords': value['keywords'],
        'creationDate': value['creationDate'],
        'modificationDate': value['modificationDate'],
        'producer': value['producer'],
        'language': value['language'],
        'languageConfidence': value['languageConfidence'],
    };
}

