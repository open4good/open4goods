/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductDto } from './ProductDto';
import {
    ProductDtoFromJSON,
    ProductDtoFromJSONTyped,
    ProductDtoToJSON,
    ProductDtoToJSONTyped,
} from './ProductDto';
import type { PageMetaDto } from './PageMetaDto';
import {
    PageMetaDtoFromJSON,
    PageMetaDtoFromJSONTyped,
    PageMetaDtoToJSON,
    PageMetaDtoToJSONTyped,
} from './PageMetaDto';

/**
 * 
 * @export
 * @interface PageDtoProductDto
 */
export interface PageDtoProductDto {
    /**
     * Pagination metadata
     * @type {PageMetaDto}
     * @memberof PageDtoProductDto
     */
    page?: PageMetaDto;
    /**
     * Current page content, to be localised using the domainLanguage query parameter when supported.
     * @type {Array<ProductDto>}
     * @memberof PageDtoProductDto
     */
    data?: Array<ProductDto>;
}

/**
 * Check if a given object implements the PageDtoProductDto interface.
 */
export function instanceOfPageDtoProductDto(value: object): value is PageDtoProductDto {
    return true;
}

export function PageDtoProductDtoFromJSON(json: any): PageDtoProductDto {
    return PageDtoProductDtoFromJSONTyped(json, false);
}

export function PageDtoProductDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageDtoProductDto {
    if (json == null) {
        return json;
    }
    return {
        
        'page': json['page'] == null ? undefined : PageMetaDtoFromJSON(json['page']),
        'data': json['data'] == null ? undefined : ((json['data'] as Array<any>).map(ProductDtoFromJSON)),
    };
}

export function PageDtoProductDtoToJSON(json: any): PageDtoProductDto {
    return PageDtoProductDtoToJSONTyped(json, false);
}

export function PageDtoProductDtoToJSONTyped(value?: PageDtoProductDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'page': PageMetaDtoToJSON(value['page']),
        'data': value['data'] == null ? undefined : ((value['data'] as Array<any>).map(ProductDtoToJSON)),
    };
}

