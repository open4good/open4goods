/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VerticalConfigDto } from './VerticalConfigDto';
import {
    VerticalConfigDtoFromJSON,
    VerticalConfigDtoFromJSONTyped,
    VerticalConfigDtoToJSON,
    VerticalConfigDtoToJSONTyped,
} from './VerticalConfigDto';

/**
 * 
 * @export
 * @interface CategoryNavigationDtoChildCategoriesInner
 */
export interface CategoryNavigationDtoChildCategoriesInner {
    /**
     * Google taxonomy identifier of the category.
     * @type {number}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    googleCategoryId?: number;
    /**
     * Localised display label for the category.
     * @type {string}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    title?: string;
    /**
     * Slug corresponding to the current category segment.
     * @type {string}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    slug?: string;
    /**
     * Hierarchical path made of slug segments separated by '/' starting from the root.
     * @type {string}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    path?: string;
    /**
     * Indicates whether the node has no children in the Google taxonomy tree.
     * @type {boolean}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    leaf?: boolean;
    /**
     * True when a vertical configuration is directly associated with the node.
     * @type {boolean}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    hasVertical?: boolean;
    /**
     * True when the node or one of its descendants exposes a vertical configuration.
     * @type {boolean}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    hasVerticals?: boolean;
    /**
     * Summary description of the associated vertical when present.
     * @type {VerticalConfigDto}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    vertical?: VerticalConfigDto;
    /**
     * Direct children of the category limited to the requested depth.
     * @type {Array<any>}
     * @memberof CategoryNavigationDtoChildCategoriesInner
     */
    children?: Array<any>;
}

/**
 * Check if a given object implements the CategoryNavigationDtoChildCategoriesInner interface.
 */
export function instanceOfCategoryNavigationDtoChildCategoriesInner(value: object): value is CategoryNavigationDtoChildCategoriesInner {
    return true;
}

export function CategoryNavigationDtoChildCategoriesInnerFromJSON(json: any): CategoryNavigationDtoChildCategoriesInner {
    return CategoryNavigationDtoChildCategoriesInnerFromJSONTyped(json, false);
}

export function CategoryNavigationDtoChildCategoriesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryNavigationDtoChildCategoriesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'googleCategoryId': json['googleCategoryId'] == null ? undefined : json['googleCategoryId'],
        'title': json['title'] == null ? undefined : json['title'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'path': json['path'] == null ? undefined : json['path'],
        'leaf': json['leaf'] == null ? undefined : json['leaf'],
        'hasVertical': json['hasVertical'] == null ? undefined : json['hasVertical'],
        'hasVerticals': json['hasVerticals'] == null ? undefined : json['hasVerticals'],
        'vertical': json['vertical'] == null ? undefined : VerticalConfigDtoFromJSON(json['vertical']),
        'children': json['children'] == null ? undefined : json['children'],
    };
}

export function CategoryNavigationDtoChildCategoriesInnerToJSON(json: any): CategoryNavigationDtoChildCategoriesInner {
    return CategoryNavigationDtoChildCategoriesInnerToJSONTyped(json, false);
}

export function CategoryNavigationDtoChildCategoriesInnerToJSONTyped(value?: CategoryNavigationDtoChildCategoriesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'googleCategoryId': value['googleCategoryId'],
        'title': value['title'],
        'slug': value['slug'],
        'path': value['path'],
        'leaf': value['leaf'],
        'hasVertical': value['hasVertical'],
        'hasVerticals': value['hasVerticals'],
        'vertical': VerticalConfigDtoToJSON(value['vertical']),
        'children': value['children'],
    };
}

