/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VerticalConfigDto
 */
export interface VerticalConfigDto {
    /**
     * Unique identifier of the vertical configuration.
     * @type {string}
     * @memberof VerticalConfigDto
     */
    id?: string;
    /**
     * Indicates whether the vertical is exposed to end-users.
     * @type {boolean}
     * @memberof VerticalConfigDto
     */
    enabled?: boolean;
    /**
     * Google taxonomy identifier associated with this vertical.
     * @type {number}
     * @memberof VerticalConfigDto
     */
    googleTaxonomyId?: number;
    /**
     * Icecat taxonomy identifier associated with this vertical.
     * @type {number}
     * @memberof VerticalConfigDto
     */
    icecatTaxonomyId?: number;
    /**
     * Display order used to render the category list.
     * @type {number}
     * @memberof VerticalConfigDto
     */
    order?: number;
    /**
     * Thumbnail image representing the vertical.
     * @type {string}
     * @memberof VerticalConfigDto
     */
    imageSmall?: string;
    /**
     * Medium image for the vertical 
     * @type {string}
     * @memberof VerticalConfigDto
     */
    imageMedium?: string;
    /**
     * Large image for the vertical 
     * @type {string}
     * @memberof VerticalConfigDto
     */
    imageLarge?: string;
    /**
     * Localised home title for the vertical.
     * @type {string}
     * @memberof VerticalConfigDto
     */
    verticalHomeTitle?: string;
    /**
     * Localised home description for the vertical.
     * @type {string}
     * @memberof VerticalConfigDto
     */
    verticalHomeDescription?: string;
    /**
     * Localised home URL slug for the vertical.
     * @type {string}
     * @memberof VerticalConfigDto
     */
    verticalHomeUrl?: string;
}

/**
 * Check if a given object implements the VerticalConfigDto interface.
 */
export function instanceOfVerticalConfigDto(value: object): value is VerticalConfigDto {
    return true;
}

export function VerticalConfigDtoFromJSON(json: any): VerticalConfigDto {
    return VerticalConfigDtoFromJSONTyped(json, false);
}

export function VerticalConfigDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerticalConfigDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'googleTaxonomyId': json['googleTaxonomyId'] == null ? undefined : json['googleTaxonomyId'],
        'icecatTaxonomyId': json['icecatTaxonomyId'] == null ? undefined : json['icecatTaxonomyId'],
        'order': json['order'] == null ? undefined : json['order'],
        'imageSmall': json['imageSmall'] == null ? undefined : json['imageSmall'],
        'imageMedium': json['imageMedium'] == null ? undefined : json['imageMedium'],
        'imageLarge': json['imageLarge'] == null ? undefined : json['imageLarge'],
        'verticalHomeTitle': json['verticalHomeTitle'] == null ? undefined : json['verticalHomeTitle'],
        'verticalHomeDescription': json['verticalHomeDescription'] == null ? undefined : json['verticalHomeDescription'],
        'verticalHomeUrl': json['verticalHomeUrl'] == null ? undefined : json['verticalHomeUrl'],
    };
}

export function VerticalConfigDtoToJSON(json: any): VerticalConfigDto {
    return VerticalConfigDtoToJSONTyped(json, false);
}

export function VerticalConfigDtoToJSONTyped(value?: VerticalConfigDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'enabled': value['enabled'],
        'googleTaxonomyId': value['googleTaxonomyId'],
        'icecatTaxonomyId': value['icecatTaxonomyId'],
        'order': value['order'],
        'imageSmall': value['imageSmall'],
        'imageMedium': value['imageMedium'],
        'imageLarge': value['imageLarge'],
        'verticalHomeTitle': value['verticalHomeTitle'],
        'verticalHomeDescription': value['verticalHomeDescription'],
        'verticalHomeUrl': value['verticalHomeUrl'],
    };
}

