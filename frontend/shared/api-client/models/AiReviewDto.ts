/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AiReviewSourceDto } from './AiReviewSourceDto';
import {
    AiReviewSourceDtoFromJSON,
    AiReviewSourceDtoFromJSONTyped,
    AiReviewSourceDtoToJSON,
    AiReviewSourceDtoToJSONTyped,
} from './AiReviewSourceDto';
import type { AiReviewAttributeDto } from './AiReviewAttributeDto';
import {
    AiReviewAttributeDtoFromJSON,
    AiReviewAttributeDtoFromJSONTyped,
    AiReviewAttributeDtoToJSON,
    AiReviewAttributeDtoToJSONTyped,
} from './AiReviewAttributeDto';

/**
 * 
 * @export
 * @interface AiReviewDto
 */
export interface AiReviewDto {
    /**
     * Detailed description of the product generated by AI
     * @type {string}
     * @memberof AiReviewDto
     */
    description?: string;
    /**
     * Short teaser presenting the product
     * @type {string}
     * @memberof AiReviewDto
     */
    shortDescription?: string;
    /**
     * Medium length title summarising the review
     * @type {string}
     * @memberof AiReviewDto
     */
    mediumTitle?: string;
    /**
     * Short title highlighting the product
     * @type {string}
     * @memberof AiReviewDto
     */
    shortTitle?: string;
    /**
     * Technical analysis extracted from trustworthy sources
     * @type {string}
     * @memberof AiReviewDto
     */
    technicalReview?: string;
    /**
     * Ecological assessment derived from the available documentation
     * @type {string}
     * @memberof AiReviewDto
     */
    ecologicalReview?: string;
    /**
     * Concise summary mixing technical and ecological highlights
     * @type {string}
     * @memberof AiReviewDto
     */
    summary?: string;
    /**
     * 
     * @type {Array<any>}
     * @memberof AiReviewDto
     */
    pros?: Array<any>;
    /**
     * 
     * @type {Array<any>}
     * @memberof AiReviewDto
     */
    cons?: Array<any>;
    /**
     * 
     * @type {Array<AiReviewSourceDto>}
     * @memberof AiReviewDto
     */
    sources?: Array<AiReviewSourceDto>;
    /**
     * 
     * @type {Array<AiReviewAttributeDto>}
     * @memberof AiReviewDto
     */
    attributes?: Array<AiReviewAttributeDto>;
    /**
     * Assessment of the data quality available for the product
     * @type {string}
     * @memberof AiReviewDto
     */
    dataQuality?: string;
}

/**
 * Check if a given object implements the AiReviewDto interface.
 */
export function instanceOfAiReviewDto(value: object): value is AiReviewDto {
    return true;
}

export function AiReviewDtoFromJSON(json: any): AiReviewDto {
    return AiReviewDtoFromJSONTyped(json, false);
}

export function AiReviewDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AiReviewDto {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : json['description'],
        'shortDescription': json['shortDescription'] == null ? undefined : json['shortDescription'],
        'mediumTitle': json['mediumTitle'] == null ? undefined : json['mediumTitle'],
        'shortTitle': json['shortTitle'] == null ? undefined : json['shortTitle'],
        'technicalReview': json['technicalReview'] == null ? undefined : json['technicalReview'],
        'ecologicalReview': json['ecologicalReview'] == null ? undefined : json['ecologicalReview'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'pros': json['pros'] == null ? undefined : json['pros'],
        'cons': json['cons'] == null ? undefined : json['cons'],
        'sources': json['sources'] == null ? undefined : ((json['sources'] as Array<any>).map(AiReviewSourceDtoFromJSON)),
        'attributes': json['attributes'] == null ? undefined : ((json['attributes'] as Array<any>).map(AiReviewAttributeDtoFromJSON)),
        'dataQuality': json['dataQuality'] == null ? undefined : json['dataQuality'],
    };
}

export function AiReviewDtoToJSON(json: any): AiReviewDto {
    return AiReviewDtoToJSONTyped(json, false);
}

export function AiReviewDtoToJSONTyped(value?: AiReviewDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'description': value['description'],
        'shortDescription': value['shortDescription'],
        'mediumTitle': value['mediumTitle'],
        'shortTitle': value['shortTitle'],
        'technicalReview': value['technicalReview'],
        'ecologicalReview': value['ecologicalReview'],
        'summary': value['summary'],
        'pros': value['pros'],
        'cons': value['cons'],
        'sources': value['sources'] == null ? undefined : ((value['sources'] as Array<any>).map(AiReviewSourceDtoToJSON)),
        'attributes': value['attributes'] == null ? undefined : ((value['attributes'] as Array<any>).map(AiReviewAttributeDtoToJSON)),
        'dataQuality': value['dataQuality'],
    };
}

