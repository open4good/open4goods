/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductSourcedAttributeDto } from './ProductSourcedAttributeDto';
import {
    ProductSourcedAttributeDtoFromJSON,
    ProductSourcedAttributeDtoFromJSONTyped,
    ProductSourcedAttributeDtoToJSON,
    ProductSourcedAttributeDtoToJSONTyped,
} from './ProductSourcedAttributeDto';

/**
 * 
 * @export
 * @interface ProductAttributeDto
 */
export interface ProductAttributeDto {
    /**
     * Attribute name
     * @type {string}
     * @memberof ProductAttributeDto
     */
    name?: string;
    /**
     * Attribute value
     * @type {string}
     * @memberof ProductAttributeDto
     */
    value?: string;
    /**
     * Icecat taxonomy identifiers associated to the attribute
     * @type {Set<number>}
     * @memberof ProductAttributeDto
     */
    icecatTaxonomyIds?: Set<number>;
    /**
     * Attributes values contributed by datasources
     * @type {Set<ProductSourcedAttributeDto>}
     * @memberof ProductAttributeDto
     */
    sources?: Set<ProductSourcedAttributeDto>;
}

/**
 * Check if a given object implements the ProductAttributeDto interface.
 */
export function instanceOfProductAttributeDto(value: object): value is ProductAttributeDto {
    return true;
}

export function ProductAttributeDtoFromJSON(json: any): ProductAttributeDto {
    return ProductAttributeDtoFromJSONTyped(json, false);
}

export function ProductAttributeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductAttributeDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'value': json['value'] == null ? undefined : json['value'],
        'icecatTaxonomyIds': json['icecatTaxonomyIds'] == null ? undefined : new Set(json['icecatTaxonomyIds']),
        'sources': json['sources'] == null ? undefined : (new Set((json['sources'] as Array<any>).map(ProductSourcedAttributeDtoFromJSON))),
    };
}

export function ProductAttributeDtoToJSON(json: any): ProductAttributeDto {
    return ProductAttributeDtoToJSONTyped(json, false);
}

export function ProductAttributeDtoToJSONTyped(value?: ProductAttributeDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'value': value['value'],
        'icecatTaxonomyIds': value['icecatTaxonomyIds'] == null ? undefined : Array.from(value['icecatTaxonomyIds'] as Set<any>),
        'sources': value['sources'] == null ? undefined : (Array.from(value['sources'] as Set<any>).map(ProductSourcedAttributeDtoToJSON)),
    };
}

