/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductPriceHistoryEntryDto } from './ProductPriceHistoryEntryDto';
import {
    ProductPriceHistoryEntryDtoFromJSON,
    ProductPriceHistoryEntryDtoFromJSONTyped,
    ProductPriceHistoryEntryDtoToJSON,
    ProductPriceHistoryEntryDtoToJSONTyped,
} from './ProductPriceHistoryEntryDto';

/**
 * 
 * @export
 * @interface ProductPriceHistoryDto
 */
export interface ProductPriceHistoryDto {
    /**
     * Full history entries sorted chronologically
     * @type {Array<ProductPriceHistoryEntryDto>}
     * @memberof ProductPriceHistoryDto
     */
    entries?: Array<ProductPriceHistoryEntryDto>;
    /**
     * Lowest recorded price in history
     * @type {ProductPriceHistoryEntryDto}
     * @memberof ProductPriceHistoryDto
     */
    lowest?: ProductPriceHistoryEntryDto;
    /**
     * Highest recorded price in history
     * @type {ProductPriceHistoryEntryDto}
     * @memberof ProductPriceHistoryDto
     */
    highest?: ProductPriceHistoryEntryDto;
    /**
     * Average price over the recorded history
     * @type {number}
     * @memberof ProductPriceHistoryDto
     */
    average?: number;
}

/**
 * Check if a given object implements the ProductPriceHistoryDto interface.
 */
export function instanceOfProductPriceHistoryDto(value: object): value is ProductPriceHistoryDto {
    return true;
}

export function ProductPriceHistoryDtoFromJSON(json: any): ProductPriceHistoryDto {
    return ProductPriceHistoryDtoFromJSONTyped(json, false);
}

export function ProductPriceHistoryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductPriceHistoryDto {
    if (json == null) {
        return json;
    }
    return {
        
        'entries': json['entries'] == null ? undefined : ((json['entries'] as Array<any>).map(ProductPriceHistoryEntryDtoFromJSON)),
        'lowest': json['lowest'] == null ? undefined : ProductPriceHistoryEntryDtoFromJSON(json['lowest']),
        'highest': json['highest'] == null ? undefined : ProductPriceHistoryEntryDtoFromJSON(json['highest']),
        'average': json['average'] == null ? undefined : json['average'],
    };
}

export function ProductPriceHistoryDtoToJSON(json: any): ProductPriceHistoryDto {
    return ProductPriceHistoryDtoToJSONTyped(json, false);
}

export function ProductPriceHistoryDtoToJSONTyped(value?: ProductPriceHistoryDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'entries': value['entries'] == null ? undefined : ((value['entries'] as Array<any>).map(ProductPriceHistoryEntryDtoToJSON)),
        'lowest': ProductPriceHistoryEntryDtoToJSON(value['lowest']),
        'highest': ProductPriceHistoryEntryDtoToJSON(value['highest']),
        'average': value['average'],
    };
}

