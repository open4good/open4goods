/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { Attachment } from './Attachment'
import {
  AttachmentFromJSON,
  AttachmentFromJSONTyped,
  AttachmentToJSON,
  AttachmentToJSONTyped,
} from './Attachment'
import type { Link } from './Link'
import {
  LinkFromJSON,
  LinkFromJSONTyped,
  LinkToJSON,
  LinkToJSONTyped,
} from './Link'

/**
 *
 * @export
 * @interface Attachments
 */
export interface Attachments {
  /**
   *
   * @type {Array<Link>}
   * @memberof Attachments
   */
  links?: Array<Link>
  /**
   *
   * @type {Array<Attachment>}
   * @memberof Attachments
   */
  attachments?: Array<Attachment>
}

/**
 * Check if a given object implements the Attachments interface.
 */
export function instanceOfAttachments(value: object): value is Attachments {
  return true
}

export function AttachmentsFromJSON(json: any): Attachments {
  return AttachmentsFromJSONTyped(json, false)
}

export function AttachmentsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Attachments {
  if (json == null) {
    return json
  }
  return {
    links:
      json['links'] == null
        ? undefined
        : (json['links'] as Array<any>).map(LinkFromJSON),
    attachments:
      json['attachments'] == null
        ? undefined
        : (json['attachments'] as Array<any>).map(AttachmentFromJSON),
  }
}

export function AttachmentsToJSON(json: any): Attachments {
  return AttachmentsToJSONTyped(json, false)
}

export function AttachmentsToJSONTyped(
  value?: Attachments | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    links:
      value['links'] == null
        ? undefined
        : (value['links'] as Array<any>).map(LinkToJSON),
    attachments:
      value['attachments'] == null
        ? undefined
        : (value['attachments'] as Array<any>).map(AttachmentToJSON),
  }
}
