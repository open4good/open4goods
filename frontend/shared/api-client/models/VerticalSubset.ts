/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubsetCriteria } from './SubsetCriteria';
import {
    SubsetCriteriaFromJSON,
    SubsetCriteriaFromJSONTyped,
    SubsetCriteriaToJSON,
    SubsetCriteriaToJSONTyped,
} from './SubsetCriteria';
import type { AttributeConfigUnit } from './AttributeConfigUnit';
import {
    AttributeConfigUnitFromJSON,
    AttributeConfigUnitFromJSONTyped,
    AttributeConfigUnitToJSON,
    AttributeConfigUnitToJSONTyped,
} from './AttributeConfigUnit';

/**
 * 
 * @export
 * @interface VerticalSubset
 */
export interface VerticalSubset {
    /**
     * 
     * @type {string}
     * @memberof VerticalSubset
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof VerticalSubset
     */
    group?: string;
    /**
     * 
     * @type {Array<SubsetCriteria>}
     * @memberof VerticalSubset
     */
    criterias?: Array<SubsetCriteria>;
    /**
     * 
     * @type {string}
     * @memberof VerticalSubset
     */
    image?: string;
    /**
     * 
     * @type {AttributeConfigUnit}
     * @memberof VerticalSubset
     */
    url?: AttributeConfigUnit;
    /**
     * 
     * @type {AttributeConfigUnit}
     * @memberof VerticalSubset
     */
    caption?: AttributeConfigUnit;
    /**
     * 
     * @type {AttributeConfigUnit}
     * @memberof VerticalSubset
     */
    title?: AttributeConfigUnit;
    /**
     * 
     * @type {AttributeConfigUnit}
     * @memberof VerticalSubset
     */
    description?: AttributeConfigUnit;
}

/**
 * Check if a given object implements the VerticalSubset interface.
 */
export function instanceOfVerticalSubset(value: object): value is VerticalSubset {
    return true;
}

export function VerticalSubsetFromJSON(json: any): VerticalSubset {
    return VerticalSubsetFromJSONTyped(json, false);
}

export function VerticalSubsetFromJSONTyped(json: any, ignoreDiscriminator: boolean): VerticalSubset {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'group': json['group'] == null ? undefined : json['group'],
        'criterias': json['criterias'] == null ? undefined : ((json['criterias'] as Array<any>).map(SubsetCriteriaFromJSON)),
        'image': json['image'] == null ? undefined : json['image'],
        'url': json['url'] == null ? undefined : AttributeConfigUnitFromJSON(json['url']),
        'caption': json['caption'] == null ? undefined : AttributeConfigUnitFromJSON(json['caption']),
        'title': json['title'] == null ? undefined : AttributeConfigUnitFromJSON(json['title']),
        'description': json['description'] == null ? undefined : AttributeConfigUnitFromJSON(json['description']),
    };
}

export function VerticalSubsetToJSON(json: any): VerticalSubset {
    return VerticalSubsetToJSONTyped(json, false);
}

export function VerticalSubsetToJSONTyped(value?: VerticalSubset | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'group': value['group'],
        'criterias': value['criterias'] == null ? undefined : ((value['criterias'] as Array<any>).map(SubsetCriteriaToJSON)),
        'image': value['image'],
        'url': AttributeConfigUnitToJSON(value['url']),
        'caption': AttributeConfigUnitToJSON(value['caption']),
        'title': AttributeConfigUnitToJSON(value['title']),
        'description': AttributeConfigUnitToJSON(value['description']),
    };
}

