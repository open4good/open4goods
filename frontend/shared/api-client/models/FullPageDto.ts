/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FullPageDto
 */
export interface FullPageDto {
    /**
     * Rendered HTML content of the page.
     * @type {string}
     * @memberof FullPageDto
     */
    htmlContent?: string;
    /**
     * Technical identifier of the XWiki document.
     * @type {string}
     * @memberof FullPageDto
     */
    id?: string;
    /**
     * Fully qualified document name.
     * @type {string}
     * @memberof FullPageDto
     */
    fullName?: string;
    /**
     * Wiki identifier hosting the page.
     * @type {string}
     * @memberof FullPageDto
     */
    wiki?: string;
    /**
     * Hierarchical space containing the document.
     * @type {string}
     * @memberof FullPageDto
     */
    space?: string;
    /**
     * Document local name.
     * @type {string}
     * @memberof FullPageDto
     */
    name?: string;
    /**
     * Current display title of the page.
     * @type {string}
     * @memberof FullPageDto
     */
    title?: string;
    /**
     * Raw title before localisation or processing.
     * @type {string}
     * @memberof FullPageDto
     */
    rawTitle?: string;
    /**
     * Identifier of the parent document.
     * @type {string}
     * @memberof FullPageDto
     */
    parent?: string;
    /**
     * Identifier of the parent document without wiki prefix.
     * @type {string}
     * @memberof FullPageDto
     */
    parentId?: string;
    /**
     * Human readable version string.
     * @type {string}
     * @memberof FullPageDto
     */
    version?: string;
    /**
     * Technical author reference.
     * @type {string}
     * @memberof FullPageDto
     */
    author?: string;
    /**
     * Display name of the author.
     * @type {string}
     * @memberof FullPageDto
     */
    authorName?: string;
    /**
     * Relative URL to the page rendered by XWiki.
     * @type {string}
     * @memberof FullPageDto
     */
    xwikiRelativeUrl?: string;
    /**
     * Absolute URL to the page rendered by XWiki.
     * @type {string}
     * @memberof FullPageDto
     */
    xwikiAbsoluteUrl?: string;
    /**
     * Syntax used to author the page content.
     * @type {string}
     * @memberof FullPageDto
     */
    syntax?: string;
    /**
     * Current language of the document.
     * @type {string}
     * @memberof FullPageDto
     */
    language?: string;
    /**
     * Major version number.
     * @type {number}
     * @memberof FullPageDto
     */
    majorVersion?: number;
    /**
     * Minor version number.
     * @type {number}
     * @memberof FullPageDto
     */
    minorVersion?: number;
    /**
     * Whether the page is hidden from listings.
     * @type {boolean}
     * @memberof FullPageDto
     */
    hidden?: boolean;
    /**
     * ISO timestamp representing document creation date.
     * @type {Date}
     * @memberof FullPageDto
     */
    created?: Date;
    /**
     * Technical reference of the page creator.
     * @type {string}
     * @memberof FullPageDto
     */
    creator?: string;
    /**
     * Display name of the page creator.
     * @type {string}
     * @memberof FullPageDto
     */
    creatorName?: string;
    /**
     * ISO timestamp representing the last modification date.
     * @type {Date}
     * @memberof FullPageDto
     */
    modified?: Date;
    /**
     * Technical reference of the last modifier.
     * @type {string}
     * @memberof FullPageDto
     */
    modifier?: string;
    /**
     * Display name of the last modifier.
     * @type {string}
     * @memberof FullPageDto
     */
    modifierName?: string;
    /**
     * Technical reference that provided the original metadata.
     * @type {string}
     * @memberof FullPageDto
     */
    originalMetadataAuthor?: string;
    /**
     * Display name for the original metadata author.
     * @type {string}
     * @memberof FullPageDto
     */
    originalMetadataAuthorName?: string;
    /**
     * CMS specific layout identifier.
     * @type {string}
     * @memberof FullPageDto
     */
    layout?: string;
    /**
     * Preferred title to display on the frontend.
     * @type {string}
     * @memberof FullPageDto
     */
    pageTitle?: string;
    /**
     * SEO meta title.
     * @type {string}
     * @memberof FullPageDto
     */
    metaTitle?: string;
    /**
     * Layout width directive.
     * @type {string}
     * @memberof FullPageDto
     */
    width?: FullPageDtoWidthEnum;
    /**
     * SEO meta description.
     * @type {string}
     * @memberof FullPageDto
     */
    metaDescription?: string;
    /**
     * Direct edit link for the page in XWiki.
     * @type {string}
     * @memberof FullPageDto
     */
    editLink?: string;
}


/**
 * @export
 */
export const FullPageDtoWidthEnum = {
    Container: 'container',
    ContainerFluid: 'container-fluid',
    ContainerSemiFluid: 'container-semi-fluid'
} as const;
export type FullPageDtoWidthEnum = typeof FullPageDtoWidthEnum[keyof typeof FullPageDtoWidthEnum];


/**
 * Check if a given object implements the FullPageDto interface.
 */
export function instanceOfFullPageDto(value: object): value is FullPageDto {
    return true;
}

export function FullPageDtoFromJSON(json: any): FullPageDto {
    return FullPageDtoFromJSONTyped(json, false);
}

export function FullPageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullPageDto {
    if (json == null) {
        return json;
    }
    return {
        
        'htmlContent': json['htmlContent'] == null ? undefined : json['htmlContent'],
        'id': json['id'] == null ? undefined : json['id'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'wiki': json['wiki'] == null ? undefined : json['wiki'],
        'space': json['space'] == null ? undefined : json['space'],
        'name': json['name'] == null ? undefined : json['name'],
        'title': json['title'] == null ? undefined : json['title'],
        'rawTitle': json['rawTitle'] == null ? undefined : json['rawTitle'],
        'parent': json['parent'] == null ? undefined : json['parent'],
        'parentId': json['parentId'] == null ? undefined : json['parentId'],
        'version': json['version'] == null ? undefined : json['version'],
        'author': json['author'] == null ? undefined : json['author'],
        'authorName': json['authorName'] == null ? undefined : json['authorName'],
        'xwikiRelativeUrl': json['xwikiRelativeUrl'] == null ? undefined : json['xwikiRelativeUrl'],
        'xwikiAbsoluteUrl': json['xwikiAbsoluteUrl'] == null ? undefined : json['xwikiAbsoluteUrl'],
        'syntax': json['syntax'] == null ? undefined : json['syntax'],
        'language': json['language'] == null ? undefined : json['language'],
        'majorVersion': json['majorVersion'] == null ? undefined : json['majorVersion'],
        'minorVersion': json['minorVersion'] == null ? undefined : json['minorVersion'],
        'hidden': json['hidden'] == null ? undefined : json['hidden'],
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
        'creator': json['creator'] == null ? undefined : json['creator'],
        'creatorName': json['creatorName'] == null ? undefined : json['creatorName'],
        'modified': json['modified'] == null ? undefined : (new Date(json['modified'])),
        'modifier': json['modifier'] == null ? undefined : json['modifier'],
        'modifierName': json['modifierName'] == null ? undefined : json['modifierName'],
        'originalMetadataAuthor': json['originalMetadataAuthor'] == null ? undefined : json['originalMetadataAuthor'],
        'originalMetadataAuthorName': json['originalMetadataAuthorName'] == null ? undefined : json['originalMetadataAuthorName'],
        'layout': json['layout'] == null ? undefined : json['layout'],
        'pageTitle': json['pageTitle'] == null ? undefined : json['pageTitle'],
        'metaTitle': json['metaTitle'] == null ? undefined : json['metaTitle'],
        'width': json['width'] == null ? undefined : json['width'],
        'metaDescription': json['metaDescription'] == null ? undefined : json['metaDescription'],
        'editLink': json['editLink'] == null ? undefined : json['editLink'],
    };
}

export function FullPageDtoToJSON(json: any): FullPageDto {
    return FullPageDtoToJSONTyped(json, false);
}

export function FullPageDtoToJSONTyped(value?: FullPageDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'htmlContent': value['htmlContent'],
        'id': value['id'],
        'fullName': value['fullName'],
        'wiki': value['wiki'],
        'space': value['space'],
        'name': value['name'],
        'title': value['title'],
        'rawTitle': value['rawTitle'],
        'parent': value['parent'],
        'parentId': value['parentId'],
        'version': value['version'],
        'author': value['author'],
        'authorName': value['authorName'],
        'xwikiRelativeUrl': value['xwikiRelativeUrl'],
        'xwikiAbsoluteUrl': value['xwikiAbsoluteUrl'],
        'syntax': value['syntax'],
        'language': value['language'],
        'majorVersion': value['majorVersion'],
        'minorVersion': value['minorVersion'],
        'hidden': value['hidden'],
        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),
        'creator': value['creator'],
        'creatorName': value['creatorName'],
        'modified': value['modified'] == null ? undefined : ((value['modified']).toISOString()),
        'modifier': value['modifier'],
        'modifierName': value['modifierName'],
        'originalMetadataAuthor': value['originalMetadataAuthor'],
        'originalMetadataAuthorName': value['originalMetadataAuthorName'],
        'layout': value['layout'],
        'pageTitle': value['pageTitle'],
        'metaTitle': value['metaTitle'],
        'width': value['width'],
        'metaDescription': value['metaDescription'],
        'editLink': value['editLink'],
    };
}

