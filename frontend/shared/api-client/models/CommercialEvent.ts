/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Commercial event highlighted on the eco-nudger calendar.
 * @export
 * @interface CommercialEvent
 */
export interface CommercialEvent {
    /**
     * Localised event label.
     * @type {string}
     * @memberof CommercialEvent
     */
    label?: string;
    /**
     * Inclusive event start date.
     * @type {Date}
     * @memberof CommercialEvent
     */
    startDate?: Date;
    /**
     * Inclusive event end date.
     * @type {Date}
     * @memberof CommercialEvent
     */
    endDate?: Date;
}

/**
 * Check if a given object implements the CommercialEvent interface.
 */
export function instanceOfCommercialEvent(value: object): value is CommercialEvent {
    return true;
}

export function CommercialEventFromJSON(json: any): CommercialEvent {
    return CommercialEventFromJSONTyped(json, false);
}

export function CommercialEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommercialEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'label': json['label'] == null ? undefined : json['label'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
    };
}

export function CommercialEventToJSON(json: any): CommercialEvent {
    return CommercialEventToJSONTyped(json, false);
}

export function CommercialEventToJSONTyped(value?: CommercialEvent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'label': value['label'],
        'startDate': value['startDate'] == null ? value['startDate'] : value['startDate'].toISOString().substring(0,10),
        'endDate': value['endDate'] == null ? value['endDate'] : value['endDate'].toISOString().substring(0,10),
    };
}

