/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Member } from './Member';
import {
    MemberFromJSON,
    MemberFromJSONTyped,
    MemberToJSON,
    MemberToJSONTyped,
} from './Member';

/**
 * 
 * @export
 * @interface TeamProperties
 */
export interface TeamProperties {
    /**
     * Core eco-nudger team members.
     * @type {Array<Member>}
     * @memberof TeamProperties
     */
    cores: Array<Member>;
    /**
     * Extended contributors supporting the core team.
     * @type {Array<Member>}
     * @memberof TeamProperties
     */
    contributors: Array<Member>;
}

/**
 * Check if a given object implements the TeamProperties interface.
 */
export function instanceOfTeamProperties(value: object): value is TeamProperties {
    if (!('cores' in value) || value['cores'] === undefined) return false;
    if (!('contributors' in value) || value['contributors'] === undefined) return false;
    return true;
}

export function TeamPropertiesFromJSON(json: any): TeamProperties {
    return TeamPropertiesFromJSONTyped(json, false);
}

export function TeamPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamProperties {
    if (json == null) {
        return json;
    }
    return {
        
        'cores': ((json['cores'] as Array<any>).map(MemberFromJSON)),
        'contributors': ((json['contributors'] as Array<any>).map(MemberFromJSON)),
    };
}

export function TeamPropertiesToJSON(json: any): TeamProperties {
    return TeamPropertiesToJSONTyped(json, false);
}

export function TeamPropertiesToJSONTyped(value?: TeamProperties | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cores': ((value['cores'] as Array<any>).map(MemberToJSON)),
        'contributors': ((value['contributors'] as Array<any>).map(MemberToJSON)),
    };
}

