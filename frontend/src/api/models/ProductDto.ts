/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductAiTextsDto } from './ProductAiTextsDto';
import {
    ProductAiTextsDtoFromJSON,
    ProductAiTextsDtoFromJSONTyped,
    ProductAiTextsDtoToJSON,
    ProductAiTextsDtoToJSONTyped,
} from './ProductAiTextsDto';
import type { ProductNamesDto } from './ProductNamesDto';
import {
    ProductNamesDtoFromJSON,
    ProductNamesDtoFromJSONTyped,
    ProductNamesDtoToJSON,
    ProductNamesDtoToJSONTyped,
} from './ProductNamesDto';
import type { ProductBaseDto } from './ProductBaseDto';
import {
    ProductBaseDtoFromJSON,
    ProductBaseDtoFromJSONTyped,
    ProductBaseDtoToJSON,
    ProductBaseDtoToJSONTyped,
} from './ProductBaseDto';
import type { ProductResourcesDto } from './ProductResourcesDto';
import {
    ProductResourcesDtoFromJSON,
    ProductResourcesDtoFromJSONTyped,
    ProductResourcesDtoToJSON,
    ProductResourcesDtoToJSONTyped,
} from './ProductResourcesDto';
import type { ProductAiReviewDto } from './ProductAiReviewDto';
import {
    ProductAiReviewDtoFromJSON,
    ProductAiReviewDtoFromJSONTyped,
    ProductAiReviewDtoToJSON,
    ProductAiReviewDtoToJSONTyped,
} from './ProductAiReviewDto';

/**
 * 
 * @export
 * @interface ProductDto
 */
export interface ProductDto {
    /**
     * Product GTIN, it is the unique identifier
     * @type {number}
     * @memberof ProductDto
     */
    gtin?: number;
    /**
     * Basic product metadata
     * @type {ProductBaseDto}
     * @memberof ProductDto
     */
    base?: ProductBaseDto;
    /**
     * Localised textual information
     * @type {ProductNamesDto}
     * @memberof ProductDto
     */
    names?: ProductNamesDto;
    /**
     * Associated media resources
     * @type {ProductResourcesDto}
     * @memberof ProductDto
     */
    resources?: ProductResourcesDto;
    /**
     * AI generated texts
     * @type {ProductAiTextsDto}
     * @memberof ProductDto
     */
    aiTexts?: ProductAiTextsDto;
    /**
     * AI-generated review
     * @type {ProductAiReviewDto}
     * @memberof ProductDto
     */
    aiReview?: ProductAiReviewDto;
    /**
     * 
     * @type {any}
     * @memberof ProductDto
     */
    offers?: any | null;
}

/**
 * Check if a given object implements the ProductDto interface.
 */
export function instanceOfProductDto(value: object): value is ProductDto {
    return true;
}

export function ProductDtoFromJSON(json: any): ProductDto {
    return ProductDtoFromJSONTyped(json, false);
}

export function ProductDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductDto {
    if (json == null) {
        return json;
    }
    return {
        
        'gtin': json['gtin'] == null ? undefined : json['gtin'],
        'base': json['base'] == null ? undefined : ProductBaseDtoFromJSON(json['base']),
        'names': json['names'] == null ? undefined : ProductNamesDtoFromJSON(json['names']),
        'resources': json['resources'] == null ? undefined : ProductResourcesDtoFromJSON(json['resources']),
        'aiTexts': json['aiTexts'] == null ? undefined : ProductAiTextsDtoFromJSON(json['aiTexts']),
        'aiReview': json['aiReview'] == null ? undefined : ProductAiReviewDtoFromJSON(json['aiReview']),
        'offers': json['offers'] == null ? undefined : json['offers'],
    };
}

export function ProductDtoToJSON(json: any): ProductDto {
    return ProductDtoToJSONTyped(json, false);
}

export function ProductDtoToJSONTyped(value?: ProductDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'gtin': value['gtin'],
        'base': ProductBaseDtoToJSON(value['base']),
        'names': ProductNamesDtoToJSON(value['names']),
        'resources': ProductResourcesDtoToJSON(value['resources']),
        'aiTexts': ProductAiTextsDtoToJSON(value['aiTexts']),
        'aiReview': ProductAiReviewDtoToJSON(value['aiReview']),
        'offers': value['offers'],
    };
}

