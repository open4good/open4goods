####################################################################################################################################################################
#
# This is the configuration for the Cafetiere vertical. All the configs items are inherited from the "_default.yml" configuration
# 
# This "TV" vertical aims to be the demonstration one. Please use the below doc as a reference, and copy/paste/adapt to setup other verticals.
# @See open4goods/commons/src/main/java/org/open4goods/config/yml/ui/VerticalConfig.java for commented POJO definition
###################################################################################################################################################################

# Unique identifier for this vertical. 
# MUST contains only charracters
# SHOULD be equal to the configuration file name, without the extension
id: cafetiere

# The associated google taxonomyID. (Ex : FR - https://www.google.com/basepages/producttype/taxonomy-with-ids.fr-FR.txt)
# If set, will be forced for all products in this vertical
taxonomyId: 736

##############################################################################
# Product classification from categories
##############################################################################
# Will associate to this vertical if one of the following categorie is present for the product  
matchingCategories:
- "PETIT ELECTROMENAGER CUISINE / CAFETIERE, EXPRESSO ET MACHINE A CAFE / CAFETIERE A DOSETTE OU CAPSULE"
- "ELECTROMENAGER > PETIT ELECTROMENAGER > MACHINE A CAFE > CAFETIERE EXPRESSO"
- "PETIT ELECTROMENAGER CUISINE / CAFETIERE, EXPRESSO ET MACHINE A CAFE / COMBINE EXPRESSO CAFETIERE"
- "PETIT ELECTROMENAGER CUISINE / CAFETIERE, EXPRESSO ET MACHINE A CAFE / EXPRESSO AVEC BROYEUR"
- "ELECTROMENAGER > PETIT DEJEUNER - CAFE > MACHINE A CAFE DOSETTE - CAPSULE"
- "HOME & GARDEN > KITCHEN & DINING > KITCHEN APPLIANCES > COFFEE MAKERS & ESPRESSO MACHINES > ESPRESSO MACHINES"
- "PETIT ELECTROMENAGER CUISINE / CAFETIERE, EXPRESSO ET MACHINE A CAFE / CAFETIERE FILTRE"

# The categories that disengage a mapping in this vertical  
unmatchingCategories:
- "QUINCAILLERIE > PIECES DETACHEES > PIECES DETACHEES POUR PETIT ELECTROMENAGER"
- "ELECTROMENAGER>ACCESSOIRES-PETIT-ELECTROMENAGER"
- "ELECTROMENAGER > PETIT DEJEUNER - CAFE > BOUILLOIRE ELECTRIQUE"
- "PETIT ELECTROMENAGER CUISINE / THEIERE ET BOUILLOIRE / BOUILLOIRE"
- "PETIT ELECTROMENAGER CUISINE / THEIERE ET BOUILLOIRE / THEIERE"
- 

#####################################################################################################################################
# I18N CONFIGURATION
# Configure in a i18n way all the texts of a product, including the Url, the title, the description, the open graph metas, ....
# Use a micro templated language, that allows to introduce variables and "if condition", which allows to generate dynamic texts 
######################################################################################################################################
i18n:
  default:
      # The layout a product url will have. Ex : 81234555-tv-led-samsung-QL659P 2023
      url: 
        # We can add ta custom prefix (with our conditional templating language if we want)
        prefix: "|| cafetière | machine à café ||"
        # Then we add some attributes values with hyphens if present (ex : led-samsung-QL659P-2023)
        attrs:
          - BRAND
          - MODEL
          - YEAR
      ##################################
      # Product page meta and h1 title 
      ##################################
      # The product h1 title. Constructed on the same basis than "url", but without the concatened hyphens
      h1Title:  
        prefix: "|| cafetière | machine à café ||"
        attrs:
          - BRAND
          - MODEL
          - YEAR
        
      productMetaTitle: "[(${p.brand()})] [(${p.model()})] : Eco-score, compensation écologique et meilleurs prix"
      productMetaDescription:  "[(${p.brand()})] [(${p.model()})] : Eco-score, compensation || écologique | environnementale || et meilleurs prix."              
      productMetaOpenGraphTitle: "[(${p.brand()})] - [(${p.model()})] : Ecoscore de [(${p.ecoscore()})]. Venez nudger cette cafetière au meilleur prix, et reversez gratuitement [(${p.compensation()})]"
      productMetaOpenGraphDescription: "productMetaOpenGraphDescription"
      productMetaTwitterTitle: "productMetaTwitterTitle"
      productMetaTwitterDescription: "productMetaTwitterDescription"

      ##################################
      # Vertical page elements 
      ##################################
      
      # url for vertical (appened to baseUrl). No templating here 
      verticalHomeUrl: "cafetieres"
      # Text displaid as title for the vertical
      # TODO : Make verticalHomeTitle/ verticalHomeDescription templatable
      verticalHomeTitle: "Cafetières"
      # Text displaid as title for the vertical
      verticalHomeDescription: "Limitez votre impact environnemental en sélectionnant la cafetière au meilleur éco-score"  
      # The image used as a logo
      verticalHomeLogo: "https://cdn.pixabay.com/photo/2014/12/05/13/51/cup-558016_1280.png?s=612x612&w=0&k=20&c=GhzC3IyvkmRp9shUBHICxM_1Lsur2uWkpNKf2F22p8s="

     # A mapping beetween custom page names behind this vertical and page templates
      pages:

      ####################################################################################
      # AI TEXTS CONFIGS
      ####################################################################################  
      aiConfig:
        - key: "global-description" 
          prompt: " écris un texte de maximum 100 mots, dans un style académique, une description avec des listes à puce en html, comprenant les principaux avantages et inconvénients de  [(${p.brand()})] [(${p.model()})], sur la base des caracteriques suivantes : [(${p.caracteristics()})]"
        - key: "ecological-description" 
          prompt: "écris un texte de maximum 100 mots, dans un style académique, une analyse de l'impact environnemental de [(${p.brand()})] [(${p.model()})], sur la base des caracteriques suivantes : [(${p.caracteristics()})]"



##############################################################################
# Eco score configuration 
# Specify here the specific ecoscore for this vertical. Format : 
# >> EXISTING_SCORE: WEIGHT
##############################################################################

ecoscoreConfig:
   BRAND_SUSTAINABILITY: 0.2
#   PARTS_AVAILLABILITY: 0.2
#   REPAIRABILITY_INDEX: 0.3
#   CLASSE_ENERGY : 0.3
#   WARRANTY: 0.1
   DATA-QUALITY: 0.1

##############################################################################
# Custom search filters : the following filters
# will also be availlable in search for this vertical (must be an attribute or a score)
##############################################################################

verticalFilters:

#  - "CLASSE_ENERGY"   
#  - "PARTS_AVAILLABILITY"
#  - "WARRANTY"
#  - "DATA-QUALITY"  
#  - "REPAIRABILITY_INDEX" 
#  - "BRAND-SUSTAINABILITY"



####################################################################################
# ATTRIBUTES DEFINITIONS
# Those attributes will be availlable for all products if found
####################################################################################      

attributesConfig:
  configs:  
     ##################################
     # DIAGONALE
     ##################################
